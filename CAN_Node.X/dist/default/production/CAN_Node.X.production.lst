

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jan 18 16:19:52 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.42
    38                           ; Generated 13/04/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F25K80 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	nvCOMRAM
    73  000042                     __pnvCOMRAM:
    74                           	opt stack 0
    75  000042                     _TMR1_InterruptHandler:
    76                           	opt stack 0
    77  000042                     	ds	2
    78  000044                     _timer1ReloadVal:
    79                           	opt stack 0
    80  000044                     	ds	2
    81  000046                     _timer0ReloadVal:
    82                           	opt stack 0
    83  000046                     	ds	2
    84  000048                     _TMR0_InterruptHandler:
    85                           	opt stack 0
    86  000048                     	ds	2
    87  0000                     _BRGCON3	set	3653
    88  0000                     _BRGCON2	set	3652
    89  0000                     _BRGCON1	set	3651
    90  0000                     _RXF5SIDL	set	3829
    91  0000                     _RXF5SIDH	set	3828
    92  0000                     _RXF5EIDL	set	3831
    93  0000                     _RXF5EIDH	set	3830
    94  0000                     _RXF4SIDL	set	3825
    95  0000                     _RXF4SIDH	set	3824
    96  0000                     _RXF4EIDL	set	3827
    97  0000                     _RXF4EIDH	set	3826
    98  0000                     _RXF3SIDL	set	3821
    99  0000                     _RXF3SIDH	set	3820
   100  0000                     _RXF3EIDL	set	3823
   101  0000                     _RXF3EIDH	set	3822
   102  0000                     _RXF2SIDL	set	3817
   103  0000                     _RXF2SIDH	set	3816
   104  0000                     _RXF2EIDL	set	3819
   105  0000                     _RXF2EIDH	set	3818
   106  0000                     _RXF1SIDL	set	3813
   107  0000                     _RXF1SIDH	set	3812
   108  0000                     _RXF1EIDL	set	3815
   109  0000                     _RXF1EIDH	set	3814
   110  0000                     _RXF0SIDL	set	3809
   111  0000                     _RXF0SIDH	set	3808
   112  0000                     _RXF0EIDL	set	3811
   113  0000                     _RXF0EIDH	set	3810
   114  0000                     _RXM1SIDL	set	3837
   115  0000                     _RXM1SIDH	set	3836
   116  0000                     _RXM1EIDL	set	3839
   117  0000                     _RXM1EIDH	set	3838
   118  0000                     _RXM0SIDL	set	3833
   119  0000                     _RXM0SIDH	set	3832
   120  0000                     _RXM0EIDL	set	3835
   121  0000                     _RXM0EIDH	set	3834
   122  0000                     _RXB1D7	set	3901
   123  0000                     _RXB1D6	set	3900
   124  0000                     _RXB1D5	set	3899
   125  0000                     _RXB1D4	set	3898
   126  0000                     _RXB1D3	set	3897
   127  0000                     _RXB1D2	set	3896
   128  0000                     _RXB1D1	set	3895
   129  0000                     _RXB1D0	set	3894
   130  0000                     _RXB1DLC	set	3893
   131  0000                     _RXB1SIDH	set	3889
   132  0000                     _RXB1EIDL	set	3892
   133  0000                     _RXB1EIDH	set	3891
   134  0000                     _RXB1SIDL	set	3890
   135  0000                     _RXB1CONbits	set	3888
   136  0000                     _TXB2D7	set	3853
   137  0000                     _TXB2D6	set	3852
   138  0000                     _TXB2D5	set	3851
   139  0000                     _TXB2D4	set	3850
   140  0000                     _TXB2D3	set	3849
   141  0000                     _TXB2D2	set	3848
   142  0000                     _TXB2D1	set	3847
   143  0000                     _TXB2D0	set	3846
   144  0000                     _TXB2DLC	set	3845
   145  0000                     _TXB2SIDL	set	3842
   146  0000                     _TXB2SIDH	set	3841
   147  0000                     _TXB2EIDL	set	3844
   148  0000                     _TXB2EIDH	set	3843
   149  0000                     _TXB2CONbits	set	3840
   150  0000                     _TXB1D7	set	3869
   151  0000                     _TXB1D6	set	3868
   152  0000                     _TXB1D5	set	3867
   153  0000                     _TXB1D4	set	3866
   154  0000                     _TXB1D3	set	3865
   155  0000                     _TXB1D2	set	3864
   156  0000                     _TXB1D1	set	3863
   157  0000                     _TXB1D0	set	3862
   158  0000                     _TXB1DLC	set	3861
   159  0000                     _TXB1SIDL	set	3858
   160  0000                     _TXB1SIDH	set	3857
   161  0000                     _TXB1EIDL	set	3860
   162  0000                     _TXB1EIDH	set	3859
   163  0000                     _TXB1CONbits	set	3856
   164  0000                     _TXB0D7	set	3885
   165  0000                     _TXB0D6	set	3884
   166  0000                     _TXB0D5	set	3883
   167  0000                     _TXB0D4	set	3882
   168  0000                     _TXB0D3	set	3881
   169  0000                     _TXB0D2	set	3880
   170  0000                     _TXB0D1	set	3879
   171  0000                     _TXB0D0	set	3878
   172  0000                     _TXB0DLC	set	3877
   173  0000                     _TXB0SIDL	set	3874
   174  0000                     _TXB0SIDH	set	3873
   175  0000                     _TXB0EIDL	set	3876
   176  0000                     _TXB0EIDH	set	3875
   177  0000                     _TXB0CONbits	set	3872
   178  0000                     _WPUB	set	3931
   179  0000                     _ANCON1	set	3932
   180  0000                     _ANCON0	set	3933
   181  0000                     _T1GCONbits	set	4010
   182  0000                     _T1CONbits	set	4045
   183  0000                     _TMR1L	set	4046
   184  0000                     _TMR1H	set	4047
   185  0000                     _T1GCON	set	4010
   186  0000                     _T1CON	set	4045
   187  0000                     _PIR1bits	set	3998
   188  0000                     _PIE1bits	set	3997
   189  0000                     _RCONbits	set	4048
   190  0000                     _T0CONbits	set	4053
   191  0000                     _TMR0L	set	4054
   192  0000                     _TMR0H	set	4055
   193  0000                     _T0CON	set	4053
   194  0000                     _CIOCONbits	set	3952
   195  0000                     _INTCONbits	set	4082
   196  0000                     _COMSTATbits	set	3953
   197  0000                     _RXB0D7	set	3949
   198  0000                     _RXB0D6	set	3948
   199  0000                     _RXB0D5	set	3947
   200  0000                     _RXB0D4	set	3946
   201  0000                     _RXB0D3	set	3945
   202  0000                     _RXB0D2	set	3944
   203  0000                     _RXB0D1	set	3943
   204  0000                     _RXB0D0	set	3942
   205  0000                     _RXB0DLC	set	3941
   206  0000                     _RXB0SIDH	set	3937
   207  0000                     _RXB0EIDL	set	3940
   208  0000                     _RXB0EIDH	set	3939
   209  0000                     _RXB0SIDL	set	3938
   210  0000                     _RXB0CONbits	set	3936
   211  0000                     _PIE5bits	set	3958
   212  0000                     _PIR5bits	set	3959
   213  0000                     _ECANCON	set	3954
   214  0000                     _CANSTAT	set	3950
   215  0000                     _CANCON	set	3951
   216  0000                     _REFOCON	set	3994
   217  0000                     _OSCTUNE	set	3995
   218  0000                     _OSCCON2	set	4050
   219  0000                     _OSCCON	set	4051
   220  0000                     _TRISC	set	3988
   221  0000                     _TRISB	set	3987
   222  0000                     _TRISA	set	3986
   223  0000                     _LATC	set	3979
   224  0000                     _LATB	set	3978
   225  0000                     _LATA	set	3977
   226                           
   227                           ; #config settings
   228  0000                     
   229                           	psect	cinit
   230  0008A0                     __pcinit:
   231                           	opt stack 0
   232  0008A0                     start_initialization:
   233                           	opt stack 0
   234  0008A0                     __initialization:
   235                           	opt stack 0
   236                           
   237                           ; Clear objects allocated to COMRAM (16 bytes)
   238  0008A0  EE00  F032         	lfsr	0,__pbssCOMRAM
   239  0008A4  0E10               	movlw	16
   240  0008A6                     clear_0:
   241  0008A6  6AEE               	clrf	postinc0,c
   242  0008A8  06E8               	decf	wreg,f,c
   243  0008AA  E1FD               	bnz	clear_0
   244  0008AC                     end_of_initialization:
   245                           	opt stack 0
   246  0008AC                     __end_of__initialization:
   247                           	opt stack 0
   248  0008AC  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249  0008AE  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250  0008B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251  0008B2  6EF8               	movwf	tblptru,c
   252  0008B4  0100               	movlb	0
   253  0008B6  EF2E  F003         	goto	_main	;jump to C main() function
   254                           tblptru	equ	0xFF8
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	bssCOMRAM
   259  000032                     __pbssCOMRAM:
   260                           	opt stack 0
   261  000032                     _data:
   262                           	opt stack 0
   263  000032                     	ds	1
   264  000033                     _send:
   265                           	opt stack 0
   266  000033                     	ds	1
   267  000034                     _canMessage:
   268                           	opt stack 0
   269  000034                     	ds	14
   270                           tblptru	equ	0xFF8
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	cstackCOMRAM
   275  000001                     __pcstackCOMRAM:
   276                           	opt stack 0
   277  000001                     ?___awmod:
   278                           	opt stack 0
   279  000001                     ___awmod@dividend:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x0
   283  000001                     	ds	2
   284  000003                     ___awmod@divisor:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x2
   288  000003                     	ds	2
   289  000005                     ___awmod@counter:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x4
   293  000005                     	ds	1
   294  000006                     ___awmod@sign:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x5
   298  000006                     	ds	1
   299  000007                     ??_INTERRUPT_InterruptManager:
   300                           
   301                           ; 1 bytes @ 0x6
   302  000007                     	ds	14
   303  000015                     ??_ECAN_Initialize:
   304  000015                     TMR0_SetInterruptHandler@InterruptHandler:
   305                           	opt stack 0
   306  000015                     TMR1_SetInterruptHandler@InterruptHandler:
   307                           	opt stack 0
   308  000015                     convertCANid2Reg@tempPassedInID:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x14
   312  000015                     	ds	2
   313  000017                     ??_TMR1_Initialize:
   314  000017                     ??_TMR0_Initialize:
   315  000017                     
   316                           ; 1 bytes @ 0x16
   317  000017                     	ds	2
   318  000019                     convertCANid2Reg@canIdType:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x18
   322  000019                     	ds	1
   323  00001A                     convertCANid2Reg@passedInEIDH:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x19
   327  00001A                     	ds	2
   328  00001C                     convertCANid2Reg@passedInEIDL:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1B
   332  00001C                     	ds	2
   333  00001E                     convertCANid2Reg@passedInSIDH:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x1D
   337  00001E                     	ds	2
   338  000020                     convertCANid2Reg@passedInSIDL:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x1F
   342  000020                     	ds	2
   343  000022                     ??_convertCANid2Reg:
   344                           
   345                           ; 1 bytes @ 0x21
   346  000022                     	ds	4
   347  000026                     convertCANid2Reg@wipSIDL:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x25
   351  000026                     	ds	1
   352  000027                     CAN_transmit@tempCanMsg:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x26
   356  000027                     	ds	2
   357  000029                     CAN_transmit@returnValue:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x28
   361  000029                     	ds	1
   362  00002A                     CAN_transmit@tempEIDH:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x29
   366  00002A                     	ds	1
   367  00002B                     CAN_transmit@tempEIDL:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x2A
   371  00002B                     	ds	1
   372  00002C                     CAN_transmit@tempSIDH:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x2B
   376  00002C                     	ds	1
   377  00002D                     CAN_transmit@tempSIDL:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x2C
   381  00002D                     	ds	1
   382  00002E                     transmit@id:
   383                           	opt stack 0
   384                           
   385                           ; 4 bytes @ 0x2D
   386  00002E                     	ds	4
   387  000032                     tblptru	equ	0xFF8
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           
   391                           ; 1 bytes @ 0x31
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 23 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels required when called:    7
   417 ;; This function calls:
   418 ;;		_SYSTEM_Initialize
   419 ;;		_TMR0_SetInterruptHandler
   420 ;;		_TMR1_SetInterruptHandler
   421 ;;		_transmit
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  00065C                     __ptext0:
   429                           	opt stack 0
   430  00065C                     _main:
   431                           	opt stack 24
   432                           
   433                           ;main.c: 27: SYSTEM_Initialize();
   434                           
   435                           ;incstack = 0
   436  00065C  EC5D  F004         	call	_SYSTEM_Initialize	;wreg free
   437                           
   438                           ;main.c: 28: CIOCONbits.CLKSEL = 1;
   439  000660  8070               	bsf	3952,0,c	;volatile
   440                           
   441                           ;main.c: 29: CIOCONbits.ENDRHI = 1;
   442  000662  8A70               	bsf	3952,5,c	;volatile
   443                           
   444                           ;main.c: 31: RXB0CONbits.RXM0 = 1;
   445  000664  8A60               	bsf	3936,5,c	;volatile
   446                           
   447                           ;main.c: 32: RXB0CONbits.RXM1 = 0;
   448  000666  9C60               	bcf	3936,6,c	;volatile
   449                           
   450                           ;main.c: 33: RXB0CONbits.RB0DBEN = 0;
   451  000668  9460               	bcf	3936,2,c	;volatile
   452                           
   453                           ;main.c: 34: RXB0CONbits.FILHIT0 = 0;
   454  00066A  9060               	bcf	3936,0,c	;volatile
   455                           
   456                           ;main.c: 36: TMR0_SetInterruptHandler(&updateData);
   457  00066C  0E7A               	movlw	low _updateData
   458  00066E  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   459  000670  0E08               	movlw	high _updateData
   460  000672  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   461  000674  EC78  F004         	call	_TMR0_SetInterruptHandler	;wreg free
   462                           
   463                           ;main.c: 37: TMR1_SetInterruptHandler(&time_to_send);
   464  000678  0EFA               	movlw	low _time_to_send
   465  00067A  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   466  00067C  0E08               	movlw	high _time_to_send
   467  00067E  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   468  000680  EC73  F004         	call	_TMR1_SetInterruptHandler	;wreg free
   469  000684  D024               	goto	l1911
   470  000686                     l1903:
   471                           
   472                           ;main.c: 40: (INTCONbits.PEIE = 1);
   473  000686  8CF2               	bsf	intcon,6,c	;volatile
   474  000688                     l1905:
   475                           
   476                           ;main.c: 43: if(send) {
   477  000688  5033               	movf	_send,w,c
   478  00068A  B4D8               	btfsc	status,2,c
   479  00068C  D7FD               	goto	l1905
   480                           
   481                           ;main.c: 44: transmit(0x640);
   482  00068E  0E40               	movlw	64
   483  000690  6E2E               	movwf	transmit@id,c
   484  000692  0E06               	movlw	6
   485  000694  6E2F               	movwf	transmit@id+1,c
   486  000696  0E00               	movlw	0
   487  000698  6E30               	movwf	transmit@id+2,c
   488  00069A  0E00               	movlw	0
   489  00069C  6E31               	movwf	transmit@id+3,c
   490  00069E  ECA1  F003         	call	_transmit	;wreg free
   491                           
   492                           ;main.c: 45: transmit(0x642);
   493  0006A2  0E42               	movlw	66
   494  0006A4  6E2E               	movwf	transmit@id,c
   495  0006A6  0E06               	movlw	6
   496  0006A8  6E2F               	movwf	transmit@id+1,c
   497  0006AA  0E00               	movlw	0
   498  0006AC  6E30               	movwf	transmit@id+2,c
   499  0006AE  0E00               	movlw	0
   500  0006B0  6E31               	movwf	transmit@id+3,c
   501  0006B2  ECA1  F003         	call	_transmit	;wreg free
   502                           
   503                           ;main.c: 46: transmit(0x641);
   504  0006B6  0E41               	movlw	65
   505  0006B8  6E2E               	movwf	transmit@id,c
   506  0006BA  0E06               	movlw	6
   507  0006BC  6E2F               	movwf	transmit@id+1,c
   508  0006BE  0E00               	movlw	0
   509  0006C0  6E30               	movwf	transmit@id+2,c
   510  0006C2  0E00               	movlw	0
   511  0006C4  6E31               	movwf	transmit@id+3,c
   512  0006C6  ECA1  F003         	call	_transmit	;wreg free
   513                           
   514                           ;main.c: 47: send = 0;
   515  0006CA  0E00               	movlw	0
   516  0006CC  6E33               	movwf	_send,c
   517  0006CE                     l1911:
   518                           
   519                           ;main.c: 48: (INTCONbits.GIE = 1);
   520  0006CE  8EF2               	bsf	intcon,7,c	;volatile
   521  0006D0  D7DA               	goto	l1903
   522  0006D2                     __end_of_main:
   523                           	opt stack 0
   524                           tblptru	equ	0xFF8
   525                           intcon	equ	0xFF2
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           status	equ	0xFD8
   529                           
   530 ;; *************** function _transmit *****************
   531 ;; Defined at:
   532 ;;		line 54 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  id              4   45[COMRAM] unsigned long 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;Total ram usage:        4 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    6
   553 ;; This function calls:
   554 ;;		_CAN_transmit
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text1
   561  000742                     __ptext1:
   562                           	opt stack 0
   563  000742                     _transmit:
   564                           	opt stack 24
   565                           
   566                           ;main.c: 55: canMessage.frame.data0 = data;
   567                           
   568                           ;incstack = 0
   569  000742  C032  F03A         	movff	_data,_canMessage+6
   570                           
   571                           ;main.c: 56: canMessage.frame.data1 = data;
   572  000746  C032  F03B         	movff	_data,_canMessage+7
   573                           
   574                           ;main.c: 57: canMessage.frame.data2 = data;
   575  00074A  C032  F03C         	movff	_data,_canMessage+8
   576                           
   577                           ;main.c: 58: canMessage.frame.data3 = data;
   578  00074E  C032  F03D         	movff	_data,_canMessage+9
   579                           
   580                           ;main.c: 59: canMessage.frame.data4 = data;
   581  000752  C032  F03E         	movff	_data,_canMessage+10
   582                           
   583                           ;main.c: 60: canMessage.frame.data5 = data;
   584  000756  C032  F03F         	movff	_data,_canMessage+11
   585                           
   586                           ;main.c: 61: canMessage.frame.data6 = data;
   587  00075A  C032  F040         	movff	_data,_canMessage+12
   588                           
   589                           ;main.c: 62: canMessage.frame.data7 = data;
   590  00075E  C032  F041         	movff	_data,_canMessage+13
   591                           
   592                           ;main.c: 63: canMessage.frame.id = id;
   593  000762  C02E  F035         	movff	transmit@id,_canMessage+1
   594  000766  C02F  F036         	movff	transmit@id+1,_canMessage+2
   595  00076A  C030  F037         	movff	transmit@id+2,_canMessage+3
   596  00076E  C031  F038         	movff	transmit@id+3,_canMessage+4
   597                           
   598                           ;main.c: 64: canMessage.frame.dlc = 8;
   599  000772  0E08               	movlw	8
   600  000774  6E39               	movwf	_canMessage+5,c
   601                           
   602                           ;main.c: 65: canMessage.frame.idType = 1;
   603  000776  0E01               	movlw	1
   604  000778  6E34               	movwf	_canMessage,c
   605                           
   606                           ;main.c: 66: CAN_transmit(&canMessage);
   607  00077A  0E34               	movlw	low _canMessage
   608  00077C  6E27               	movwf	CAN_transmit@tempCanMsg,c
   609  00077E  0E00               	movlw	high _canMessage
   610  000780  6E28               	movwf	CAN_transmit@tempCanMsg+1,c
   611  000782  EC4D  F000         	call	_CAN_transmit	;wreg free
   612  000786  0012               	return		;funcret
   613  000788                     __end_of_transmit:
   614                           	opt stack 0
   615                           tblptru	equ	0xFF8
   616                           intcon	equ	0xFF2
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           status	equ	0xFD8
   620                           
   621 ;; *************** function _CAN_transmit *****************
   622 ;; Defined at:
   623 ;;		line 165 in file "mcc_generated_files/ecan.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  tempCanMsg      2   38[COMRAM] PTR struct .
   626 ;;		 -> canMessage(14), 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  tempSIDL        1   44[COMRAM] unsigned char 
   629 ;;  tempSIDH        1   43[COMRAM] unsigned char 
   630 ;;  tempEIDL        1   42[COMRAM] unsigned char 
   631 ;;  tempEIDH        1   41[COMRAM] unsigned char 
   632 ;;  returnValue     1   40[COMRAM] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   646 ;;Total ram usage:        7 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    5
   649 ;; This function calls:
   650 ;;		_convertCANid2Reg
   651 ;; This function is called by:
   652 ;;		_transmit
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text2
   657  00009A                     __ptext2:
   658                           	opt stack 0
   659  00009A                     _CAN_transmit:
   660                           	opt stack 24
   661                           
   662                           ;ecan.c: 166: unsigned char tempEIDH = 0;
   663                           
   664                           ;incstack = 0
   665  00009A  0E00               	movlw	0
   666  00009C  6E2A               	movwf	CAN_transmit@tempEIDH,c
   667                           
   668                           ;ecan.c: 167: unsigned char tempEIDL = 0;
   669  00009E  0E00               	movlw	0
   670  0000A0  6E2B               	movwf	CAN_transmit@tempEIDL,c
   671                           
   672                           ;ecan.c: 168: unsigned char tempSIDH = 0;
   673  0000A2  0E00               	movlw	0
   674  0000A4  6E2C               	movwf	CAN_transmit@tempSIDH,c
   675                           
   676                           ;ecan.c: 169: unsigned char tempSIDL = 0;
   677  0000A6  0E00               	movlw	0
   678  0000A8  6E2D               	movwf	CAN_transmit@tempSIDL,c
   679                           
   680                           ;ecan.c: 171: unsigned char returnValue = 0;
   681  0000AA  0E00               	movlw	0
   682  0000AC  6E29               	movwf	CAN_transmit@returnValue,c
   683                           
   684                           ;ecan.c: 173: if (TXB0CONbits.TXREQ != 1) {
   685  0000AE  010F               	movlb	15	; () banked
   686  0000B0  B720               	btfsc	32,3,b	;volatile
   687  0000B2  D084               	goto	l296
   688                           
   689                           ; BSR set to: 15
   690                           ;ecan.c: 175: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
   691  0000B4  EE20 F001          	lfsr	2,1
   692  0000B8  5027               	movf	CAN_transmit@tempCanMsg,w,c
   693  0000BA  26D9               	addwf	fsr2l,f,c
   694  0000BC  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   695  0000BE  22DA               	addwfc	fsr2h,f,c
   696  0000C0  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
   697  0000C4  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
   698  0000C8  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
   699  0000CC  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
   700  0000D0  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
   701  0000D4  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
   702  0000D8  50DF               	movf	indf2,w,c
   703  0000DA  6E19               	movwf	convertCANid2Reg@canIdType,c
   704  0000DC  0E2A               	movlw	low CAN_transmit@tempEIDH
   705  0000DE  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
   706  0000E0  0E00               	movlw	high CAN_transmit@tempEIDH
   707  0000E2  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
   708  0000E4  0E2B               	movlw	low CAN_transmit@tempEIDL
   709  0000E6  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
   710  0000E8  0E00               	movlw	high CAN_transmit@tempEIDL
   711  0000EA  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
   712  0000EC  0E2C               	movlw	low CAN_transmit@tempSIDH
   713  0000EE  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
   714  0000F0  0E00               	movlw	high CAN_transmit@tempSIDH
   715  0000F2  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
   716  0000F4  0E2D               	movlw	low CAN_transmit@tempSIDL
   717  0000F6  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
   718  0000F8  0E00               	movlw	high CAN_transmit@tempSIDL
   719  0000FA  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
   720  0000FC  ECEC  F001         	call	_convertCANid2Reg	;wreg free
   721                           
   722                           ;ecan.c: 177: TXB0EIDH = tempEIDH;
   723  000100  C02A  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
   724                           
   725                           ;ecan.c: 178: TXB0EIDL = tempEIDL;
   726  000104  C02B  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
   727                           
   728                           ;ecan.c: 179: TXB0SIDH = tempSIDH;
   729  000108  C02C  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
   730                           
   731                           ;ecan.c: 180: TXB0SIDL = tempSIDL;
   732  00010C  C02D  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
   733                           
   734                           ;ecan.c: 181: TXB0DLC = tempCanMsg->frame.dlc;
   735  000110  EE20 F005          	lfsr	2,5
   736  000114  5027               	movf	CAN_transmit@tempCanMsg,w,c
   737  000116  26D9               	addwf	fsr2l,f,c
   738  000118  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   739  00011A  22DA               	addwfc	fsr2h,f,c
   740  00011C  50DF               	movf	indf2,w,c
   741  00011E  010F               	movlb	15	; () banked
   742  000120  6F25               	movwf	37,b	;volatile
   743                           
   744                           ; BSR set to: 15
   745                           ;ecan.c: 182: TXB0D0 = tempCanMsg->frame.data0;
   746  000122  EE20 F006          	lfsr	2,6
   747  000126  5027               	movf	CAN_transmit@tempCanMsg,w,c
   748  000128  26D9               	addwf	fsr2l,f,c
   749  00012A  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   750  00012C  22DA               	addwfc	fsr2h,f,c
   751  00012E  50DF               	movf	indf2,w,c
   752  000130  010F               	movlb	15	; () banked
   753  000132  6F26               	movwf	38,b	;volatile
   754                           
   755                           ; BSR set to: 15
   756                           ;ecan.c: 183: TXB0D1 = tempCanMsg->frame.data1;
   757  000134  EE20 F007          	lfsr	2,7
   758  000138  5027               	movf	CAN_transmit@tempCanMsg,w,c
   759  00013A  26D9               	addwf	fsr2l,f,c
   760  00013C  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   761  00013E  22DA               	addwfc	fsr2h,f,c
   762  000140  50DF               	movf	indf2,w,c
   763  000142  010F               	movlb	15	; () banked
   764  000144  6F27               	movwf	39,b	;volatile
   765                           
   766                           ; BSR set to: 15
   767                           ;ecan.c: 184: TXB0D2 = tempCanMsg->frame.data2;
   768  000146  EE20 F008          	lfsr	2,8
   769  00014A  5027               	movf	CAN_transmit@tempCanMsg,w,c
   770  00014C  26D9               	addwf	fsr2l,f,c
   771  00014E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   772  000150  22DA               	addwfc	fsr2h,f,c
   773  000152  50DF               	movf	indf2,w,c
   774  000154  010F               	movlb	15	; () banked
   775  000156  6F28               	movwf	40,b	;volatile
   776                           
   777                           ; BSR set to: 15
   778                           ;ecan.c: 185: TXB0D3 = tempCanMsg->frame.data3;
   779  000158  EE20 F009          	lfsr	2,9
   780  00015C  5027               	movf	CAN_transmit@tempCanMsg,w,c
   781  00015E  26D9               	addwf	fsr2l,f,c
   782  000160  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   783  000162  22DA               	addwfc	fsr2h,f,c
   784  000164  50DF               	movf	indf2,w,c
   785  000166  010F               	movlb	15	; () banked
   786  000168  6F29               	movwf	41,b	;volatile
   787                           
   788                           ; BSR set to: 15
   789                           ;ecan.c: 186: TXB0D4 = tempCanMsg->frame.data4;
   790  00016A  EE20 F00A          	lfsr	2,10
   791  00016E  5027               	movf	CAN_transmit@tempCanMsg,w,c
   792  000170  26D9               	addwf	fsr2l,f,c
   793  000172  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   794  000174  22DA               	addwfc	fsr2h,f,c
   795  000176  50DF               	movf	indf2,w,c
   796  000178  010F               	movlb	15	; () banked
   797  00017A  6F2A               	movwf	42,b	;volatile
   798                           
   799                           ; BSR set to: 15
   800                           ;ecan.c: 187: TXB0D5 = tempCanMsg->frame.data5;
   801  00017C  EE20 F00B          	lfsr	2,11
   802  000180  5027               	movf	CAN_transmit@tempCanMsg,w,c
   803  000182  26D9               	addwf	fsr2l,f,c
   804  000184  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   805  000186  22DA               	addwfc	fsr2h,f,c
   806  000188  50DF               	movf	indf2,w,c
   807  00018A  010F               	movlb	15	; () banked
   808  00018C  6F2B               	movwf	43,b	;volatile
   809                           
   810                           ; BSR set to: 15
   811                           ;ecan.c: 188: TXB0D6 = tempCanMsg->frame.data6;
   812  00018E  EE20 F00C          	lfsr	2,12
   813  000192  5027               	movf	CAN_transmit@tempCanMsg,w,c
   814  000194  26D9               	addwf	fsr2l,f,c
   815  000196  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   816  000198  22DA               	addwfc	fsr2h,f,c
   817  00019A  50DF               	movf	indf2,w,c
   818  00019C  010F               	movlb	15	; () banked
   819  00019E  6F2C               	movwf	44,b	;volatile
   820                           
   821                           ; BSR set to: 15
   822                           ;ecan.c: 189: TXB0D7 = tempCanMsg->frame.data7;
   823  0001A0  EE20 F00D          	lfsr	2,13
   824  0001A4  5027               	movf	CAN_transmit@tempCanMsg,w,c
   825  0001A6  26D9               	addwf	fsr2l,f,c
   826  0001A8  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   827  0001AA  22DA               	addwfc	fsr2h,f,c
   828  0001AC  50DF               	movf	indf2,w,c
   829  0001AE  010F               	movlb	15	; () banked
   830  0001B0  6F2D               	movwf	45,b	;volatile
   831                           
   832                           ; BSR set to: 15
   833                           ;ecan.c: 191: TXB0CONbits.TXREQ = 1;
   834  0001B2  010F               	movlb	15	; () banked
   835  0001B4  8720               	bsf	32,3,b	;volatile
   836                           
   837                           ; BSR set to: 15
   838                           ;ecan.c: 192: returnValue = 1;
   839  0001B6  0E01               	movlw	1
   840  0001B8  6E29               	movwf	CAN_transmit@returnValue,c
   841                           
   842                           ;ecan.c: 193: } else if (TXB1CONbits.TXREQ != 1) {
   843  0001BA  0012               	return	
   844  0001BC                     l296:
   845                           
   846                           ; BSR set to: 15
   847  0001BC  010F               	movlb	15	; () banked
   848  0001BE  B710               	btfsc	16,3,b	;volatile
   849  0001C0  D084               	goto	l298
   850                           
   851                           ; BSR set to: 15
   852                           ;ecan.c: 195: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
   853  0001C2  EE20 F001          	lfsr	2,1
   854  0001C6  5027               	movf	CAN_transmit@tempCanMsg,w,c
   855  0001C8  26D9               	addwf	fsr2l,f,c
   856  0001CA  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   857  0001CC  22DA               	addwfc	fsr2h,f,c
   858  0001CE  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
   859  0001D2  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
   860  0001D6  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
   861  0001DA  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
   862  0001DE  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
   863  0001E2  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
   864  0001E6  50DF               	movf	indf2,w,c
   865  0001E8  6E19               	movwf	convertCANid2Reg@canIdType,c
   866  0001EA  0E2A               	movlw	low CAN_transmit@tempEIDH
   867  0001EC  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
   868  0001EE  0E00               	movlw	high CAN_transmit@tempEIDH
   869  0001F0  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
   870  0001F2  0E2B               	movlw	low CAN_transmit@tempEIDL
   871  0001F4  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
   872  0001F6  0E00               	movlw	high CAN_transmit@tempEIDL
   873  0001F8  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
   874  0001FA  0E2C               	movlw	low CAN_transmit@tempSIDH
   875  0001FC  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
   876  0001FE  0E00               	movlw	high CAN_transmit@tempSIDH
   877  000200  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
   878  000202  0E2D               	movlw	low CAN_transmit@tempSIDL
   879  000204  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
   880  000206  0E00               	movlw	high CAN_transmit@tempSIDL
   881  000208  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
   882  00020A  ECEC  F001         	call	_convertCANid2Reg	;wreg free
   883                           
   884                           ;ecan.c: 197: TXB1EIDH = tempEIDH;
   885  00020E  C02A  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
   886                           
   887                           ;ecan.c: 198: TXB1EIDL = tempEIDL;
   888  000212  C02B  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
   889                           
   890                           ;ecan.c: 199: TXB1SIDH = tempSIDH;
   891  000216  C02C  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
   892                           
   893                           ;ecan.c: 200: TXB1SIDL = tempSIDL;
   894  00021A  C02D  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
   895                           
   896                           ;ecan.c: 201: TXB1DLC = tempCanMsg->frame.dlc;
   897  00021E  EE20 F005          	lfsr	2,5
   898  000222  5027               	movf	CAN_transmit@tempCanMsg,w,c
   899  000224  26D9               	addwf	fsr2l,f,c
   900  000226  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   901  000228  22DA               	addwfc	fsr2h,f,c
   902  00022A  50DF               	movf	indf2,w,c
   903  00022C  010F               	movlb	15	; () banked
   904  00022E  6F15               	movwf	21,b	;volatile
   905                           
   906                           ; BSR set to: 15
   907                           ;ecan.c: 202: TXB1D0 = tempCanMsg->frame.data0;
   908  000230  EE20 F006          	lfsr	2,6
   909  000234  5027               	movf	CAN_transmit@tempCanMsg,w,c
   910  000236  26D9               	addwf	fsr2l,f,c
   911  000238  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   912  00023A  22DA               	addwfc	fsr2h,f,c
   913  00023C  50DF               	movf	indf2,w,c
   914  00023E  010F               	movlb	15	; () banked
   915  000240  6F16               	movwf	22,b	;volatile
   916                           
   917                           ; BSR set to: 15
   918                           ;ecan.c: 203: TXB1D1 = tempCanMsg->frame.data1;
   919  000242  EE20 F007          	lfsr	2,7
   920  000246  5027               	movf	CAN_transmit@tempCanMsg,w,c
   921  000248  26D9               	addwf	fsr2l,f,c
   922  00024A  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   923  00024C  22DA               	addwfc	fsr2h,f,c
   924  00024E  50DF               	movf	indf2,w,c
   925  000250  010F               	movlb	15	; () banked
   926  000252  6F17               	movwf	23,b	;volatile
   927                           
   928                           ; BSR set to: 15
   929                           ;ecan.c: 204: TXB1D2 = tempCanMsg->frame.data2;
   930  000254  EE20 F008          	lfsr	2,8
   931  000258  5027               	movf	CAN_transmit@tempCanMsg,w,c
   932  00025A  26D9               	addwf	fsr2l,f,c
   933  00025C  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   934  00025E  22DA               	addwfc	fsr2h,f,c
   935  000260  50DF               	movf	indf2,w,c
   936  000262  010F               	movlb	15	; () banked
   937  000264  6F18               	movwf	24,b	;volatile
   938                           
   939                           ; BSR set to: 15
   940                           ;ecan.c: 205: TXB1D3 = tempCanMsg->frame.data3;
   941  000266  EE20 F009          	lfsr	2,9
   942  00026A  5027               	movf	CAN_transmit@tempCanMsg,w,c
   943  00026C  26D9               	addwf	fsr2l,f,c
   944  00026E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   945  000270  22DA               	addwfc	fsr2h,f,c
   946  000272  50DF               	movf	indf2,w,c
   947  000274  010F               	movlb	15	; () banked
   948  000276  6F19               	movwf	25,b	;volatile
   949                           
   950                           ; BSR set to: 15
   951                           ;ecan.c: 206: TXB1D4 = tempCanMsg->frame.data4;
   952  000278  EE20 F00A          	lfsr	2,10
   953  00027C  5027               	movf	CAN_transmit@tempCanMsg,w,c
   954  00027E  26D9               	addwf	fsr2l,f,c
   955  000280  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   956  000282  22DA               	addwfc	fsr2h,f,c
   957  000284  50DF               	movf	indf2,w,c
   958  000286  010F               	movlb	15	; () banked
   959  000288  6F1A               	movwf	26,b	;volatile
   960                           
   961                           ; BSR set to: 15
   962                           ;ecan.c: 207: TXB1D5 = tempCanMsg->frame.data5;
   963  00028A  EE20 F00B          	lfsr	2,11
   964  00028E  5027               	movf	CAN_transmit@tempCanMsg,w,c
   965  000290  26D9               	addwf	fsr2l,f,c
   966  000292  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   967  000294  22DA               	addwfc	fsr2h,f,c
   968  000296  50DF               	movf	indf2,w,c
   969  000298  010F               	movlb	15	; () banked
   970  00029A  6F1B               	movwf	27,b	;volatile
   971                           
   972                           ; BSR set to: 15
   973                           ;ecan.c: 208: TXB1D6 = tempCanMsg->frame.data6;
   974  00029C  EE20 F00C          	lfsr	2,12
   975  0002A0  5027               	movf	CAN_transmit@tempCanMsg,w,c
   976  0002A2  26D9               	addwf	fsr2l,f,c
   977  0002A4  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   978  0002A6  22DA               	addwfc	fsr2h,f,c
   979  0002A8  50DF               	movf	indf2,w,c
   980  0002AA  010F               	movlb	15	; () banked
   981  0002AC  6F1C               	movwf	28,b	;volatile
   982                           
   983                           ; BSR set to: 15
   984                           ;ecan.c: 209: TXB1D7 = tempCanMsg->frame.data7;
   985  0002AE  EE20 F00D          	lfsr	2,13
   986  0002B2  5027               	movf	CAN_transmit@tempCanMsg,w,c
   987  0002B4  26D9               	addwf	fsr2l,f,c
   988  0002B6  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
   989  0002B8  22DA               	addwfc	fsr2h,f,c
   990  0002BA  50DF               	movf	indf2,w,c
   991  0002BC  010F               	movlb	15	; () banked
   992  0002BE  6F1D               	movwf	29,b	;volatile
   993                           
   994                           ; BSR set to: 15
   995                           ;ecan.c: 211: TXB1CONbits.TXREQ = 1;
   996  0002C0  010F               	movlb	15	; () banked
   997  0002C2  8710               	bsf	16,3,b	;volatile
   998                           
   999                           ; BSR set to: 15
  1000                           ;ecan.c: 212: returnValue = 1;
  1001  0002C4  0E01               	movlw	1
  1002  0002C6  6E29               	movwf	CAN_transmit@returnValue,c
  1003                           
  1004                           ;ecan.c: 213: } else if (TXB2CONbits.TXREQ != 1) {
  1005  0002C8  0012               	return	
  1006  0002CA                     l298:
  1007                           
  1008                           ; BSR set to: 15
  1009  0002CA  010F               	movlb	15	; () banked
  1010  0002CC  B700               	btfsc	0,3,b	;volatile
  1011  0002CE  0012               	return	
  1012                           
  1013                           ; BSR set to: 15
  1014                           ;ecan.c: 215: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1015  0002D0  EE20 F001          	lfsr	2,1
  1016  0002D4  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1017  0002D6  26D9               	addwf	fsr2l,f,c
  1018  0002D8  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1019  0002DA  22DA               	addwfc	fsr2h,f,c
  1020  0002DC  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1021  0002E0  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1022  0002E4  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1023  0002E8  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1024  0002EC  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1025  0002F0  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1026  0002F4  50DF               	movf	indf2,w,c
  1027  0002F6  6E19               	movwf	convertCANid2Reg@canIdType,c
  1028  0002F8  0E2A               	movlw	low CAN_transmit@tempEIDH
  1029  0002FA  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
  1030  0002FC  0E00               	movlw	high CAN_transmit@tempEIDH
  1031  0002FE  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1032  000300  0E2B               	movlw	low CAN_transmit@tempEIDL
  1033  000302  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
  1034  000304  0E00               	movlw	high CAN_transmit@tempEIDL
  1035  000306  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1036  000308  0E2C               	movlw	low CAN_transmit@tempSIDH
  1037  00030A  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
  1038  00030C  0E00               	movlw	high CAN_transmit@tempSIDH
  1039  00030E  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1040  000310  0E2D               	movlw	low CAN_transmit@tempSIDL
  1041  000312  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
  1042  000314  0E00               	movlw	high CAN_transmit@tempSIDL
  1043  000316  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1044  000318  ECEC  F001         	call	_convertCANid2Reg	;wreg free
  1045                           
  1046                           ;ecan.c: 217: TXB2EIDH = tempEIDH;
  1047  00031C  C02A  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  1048                           
  1049                           ;ecan.c: 218: TXB2EIDL = tempEIDL;
  1050  000320  C02B  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  1051                           
  1052                           ;ecan.c: 219: TXB2SIDH = tempSIDH;
  1053  000324  C02C  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  1054                           
  1055                           ;ecan.c: 220: TXB2SIDL = tempSIDL;
  1056  000328  C02D  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  1057                           
  1058                           ;ecan.c: 221: TXB2DLC = tempCanMsg->frame.dlc;
  1059  00032C  EE20 F005          	lfsr	2,5
  1060  000330  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1061  000332  26D9               	addwf	fsr2l,f,c
  1062  000334  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1063  000336  22DA               	addwfc	fsr2h,f,c
  1064  000338  50DF               	movf	indf2,w,c
  1065  00033A  010F               	movlb	15	; () banked
  1066  00033C  6F05               	movwf	5,b	;volatile
  1067                           
  1068                           ; BSR set to: 15
  1069                           ;ecan.c: 222: TXB2D0 = tempCanMsg->frame.data0;
  1070  00033E  EE20 F006          	lfsr	2,6
  1071  000342  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1072  000344  26D9               	addwf	fsr2l,f,c
  1073  000346  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1074  000348  22DA               	addwfc	fsr2h,f,c
  1075  00034A  50DF               	movf	indf2,w,c
  1076  00034C  010F               	movlb	15	; () banked
  1077  00034E  6F06               	movwf	6,b	;volatile
  1078                           
  1079                           ; BSR set to: 15
  1080                           ;ecan.c: 223: TXB2D1 = tempCanMsg->frame.data1;
  1081  000350  EE20 F007          	lfsr	2,7
  1082  000354  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1083  000356  26D9               	addwf	fsr2l,f,c
  1084  000358  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1085  00035A  22DA               	addwfc	fsr2h,f,c
  1086  00035C  50DF               	movf	indf2,w,c
  1087  00035E  010F               	movlb	15	; () banked
  1088  000360  6F07               	movwf	7,b	;volatile
  1089                           
  1090                           ; BSR set to: 15
  1091                           ;ecan.c: 224: TXB2D2 = tempCanMsg->frame.data2;
  1092  000362  EE20 F008          	lfsr	2,8
  1093  000366  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1094  000368  26D9               	addwf	fsr2l,f,c
  1095  00036A  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1096  00036C  22DA               	addwfc	fsr2h,f,c
  1097  00036E  50DF               	movf	indf2,w,c
  1098  000370  010F               	movlb	15	; () banked
  1099  000372  6F08               	movwf	8,b	;volatile
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;ecan.c: 225: TXB2D3 = tempCanMsg->frame.data3;
  1103  000374  EE20 F009          	lfsr	2,9
  1104  000378  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1105  00037A  26D9               	addwf	fsr2l,f,c
  1106  00037C  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1107  00037E  22DA               	addwfc	fsr2h,f,c
  1108  000380  50DF               	movf	indf2,w,c
  1109  000382  010F               	movlb	15	; () banked
  1110  000384  6F09               	movwf	9,b	;volatile
  1111                           
  1112                           ; BSR set to: 15
  1113                           ;ecan.c: 226: TXB2D4 = tempCanMsg->frame.data4;
  1114  000386  EE20 F00A          	lfsr	2,10
  1115  00038A  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1116  00038C  26D9               	addwf	fsr2l,f,c
  1117  00038E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1118  000390  22DA               	addwfc	fsr2h,f,c
  1119  000392  50DF               	movf	indf2,w,c
  1120  000394  010F               	movlb	15	; () banked
  1121  000396  6F0A               	movwf	10,b	;volatile
  1122                           
  1123                           ; BSR set to: 15
  1124                           ;ecan.c: 227: TXB2D5 = tempCanMsg->frame.data5;
  1125  000398  EE20 F00B          	lfsr	2,11
  1126  00039C  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1127  00039E  26D9               	addwf	fsr2l,f,c
  1128  0003A0  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1129  0003A2  22DA               	addwfc	fsr2h,f,c
  1130  0003A4  50DF               	movf	indf2,w,c
  1131  0003A6  010F               	movlb	15	; () banked
  1132  0003A8  6F0B               	movwf	11,b	;volatile
  1133                           
  1134                           ; BSR set to: 15
  1135                           ;ecan.c: 228: TXB2D6 = tempCanMsg->frame.data6;
  1136  0003AA  EE20 F00C          	lfsr	2,12
  1137  0003AE  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1138  0003B0  26D9               	addwf	fsr2l,f,c
  1139  0003B2  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1140  0003B4  22DA               	addwfc	fsr2h,f,c
  1141  0003B6  50DF               	movf	indf2,w,c
  1142  0003B8  010F               	movlb	15	; () banked
  1143  0003BA  6F0C               	movwf	12,b	;volatile
  1144                           
  1145                           ; BSR set to: 15
  1146                           ;ecan.c: 229: TXB2D7 = tempCanMsg->frame.data7;
  1147  0003BC  EE20 F00D          	lfsr	2,13
  1148  0003C0  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1149  0003C2  26D9               	addwf	fsr2l,f,c
  1150  0003C4  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1151  0003C6  22DA               	addwfc	fsr2h,f,c
  1152  0003C8  50DF               	movf	indf2,w,c
  1153  0003CA  010F               	movlb	15	; () banked
  1154  0003CC  6F0D               	movwf	13,b	;volatile
  1155                           
  1156                           ; BSR set to: 15
  1157                           ;ecan.c: 231: TXB2CONbits.TXREQ = 1;
  1158  0003CE  010F               	movlb	15	; () banked
  1159  0003D0  8700               	bsf	0,3,b	;volatile
  1160                           
  1161                           ; BSR set to: 15
  1162                           ;ecan.c: 232: returnValue = 1;
  1163  0003D2  0E01               	movlw	1
  1164  0003D4  6E29               	movwf	CAN_transmit@returnValue,c
  1165                           
  1166                           ; BSR set to: 15
  1167                           
  1168                           ; BSR set to: 15
  1169                           
  1170                           ; BSR set to: 15
  1171  0003D6  0012               	return	
  1172  0003D8                     __end_of_CAN_transmit:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           intcon	equ	0xFF2
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function _convertCANid2Reg *****************
  1185 ;; Defined at:
  1186 ;;		line 398 in file "mcc_generated_files/ecan.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  tempPassedIn    4   20[COMRAM] unsigned long 
  1189 ;;  canIdType       1   24[COMRAM] unsigned char 
  1190 ;;  passedInEIDH    2   25[COMRAM] PTR unsigned char 
  1191 ;;		 -> CAN_transmit@tempEIDH(1), 
  1192 ;;  passedInEIDL    2   27[COMRAM] PTR unsigned char 
  1193 ;;		 -> CAN_transmit@tempEIDL(1), 
  1194 ;;  passedInSIDH    2   29[COMRAM] PTR unsigned char 
  1195 ;;		 -> CAN_transmit@tempSIDH(1), 
  1196 ;;  passedInSIDL    2   31[COMRAM] PTR unsigned char 
  1197 ;;		 -> CAN_transmit@tempSIDL(1), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  wipSIDL         1   37[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1209 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;Total ram usage:       18 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    4
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_CAN_transmit
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text3
  1224  0003D8                     __ptext3:
  1225                           	opt stack 0
  1226  0003D8                     _convertCANid2Reg:
  1227                           	opt stack 24
  1228                           
  1229                           ;ecan.c: 399: unsigned char wipSIDL = 0;
  1230                           
  1231                           ; BSR set to: 15
  1232                           ;incstack = 0
  1233  0003D8  0E00               	movlw	0
  1234  0003DA  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  1235                           
  1236                           ;ecan.c: 401: if (canIdType == 2) {
  1237  0003DC  0E02               	movlw	2
  1238  0003DE  1819               	xorwf	convertCANid2Reg@canIdType,w,c
  1239  0003E0  A4D8               	btfss	status,2,c
  1240  0003E2  D081               	goto	l1675
  1241                           
  1242                           ;ecan.c: 404: *passedInEIDL = 0xFF & tempPassedInID;
  1243  0003E4  C01C  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1244  0003E8  C01D  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1245  0003EC  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1246                           
  1247                           ;ecan.c: 405: tempPassedInID = tempPassedInID >> 8;
  1248  0003F0  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1249  0003F4  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1250  0003F8  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1251  0003FC  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1252  000400  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1253  000404  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1254  000408  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1255  00040C  6A25               	clrf	??_convertCANid2Reg+3,c
  1256  00040E  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1257  000412  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1258  000416  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1259  00041A  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1260                           
  1261                           ;ecan.c: 408: *passedInEIDH = 0xFF & tempPassedInID;
  1262  00041E  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1263  000422  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1264  000426  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1265                           
  1266                           ;ecan.c: 409: tempPassedInID = tempPassedInID >> 8;
  1267  00042A  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1268  00042E  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1269  000432  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1270  000436  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1271  00043A  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1272  00043E  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1273  000442  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1274  000446  6A25               	clrf	??_convertCANid2Reg+3,c
  1275  000448  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1276  00044C  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1277  000450  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1278  000454  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1279                           
  1280                           ;ecan.c: 413: wipSIDL = 0x03 & tempPassedInID;
  1281  000458  5015               	movf	convertCANid2Reg@tempPassedInID,w,c
  1282  00045A  0B03               	andlw	3
  1283  00045C  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  1284                           
  1285                           ;ecan.c: 414: tempPassedInID = tempPassedInID << 3;
  1286  00045E  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1287  000462  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1288  000466  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1289  00046A  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1290  00046E  0E03               	movlw	3
  1291  000470                     u395:
  1292  000470  90D8               	bcf	status,0,c
  1293  000472  3622               	rlcf	??_convertCANid2Reg,f,c
  1294  000474  3623               	rlcf	??_convertCANid2Reg+1,f,c
  1295  000476  3624               	rlcf	??_convertCANid2Reg+2,f,c
  1296  000478  3625               	rlcf	??_convertCANid2Reg+3,f,c
  1297  00047A  2EE8               	decfsz	wreg,f,c
  1298  00047C  D7F9               	goto	u395
  1299  00047E  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1300  000482  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1301  000486  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1302  00048A  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1303                           
  1304                           ;ecan.c: 415: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  1305  00048E  5015               	movf	convertCANid2Reg@tempPassedInID,w,c
  1306  000490  0BE0               	andlw	224
  1307  000492  2426               	addwf	convertCANid2Reg@wipSIDL,w,c
  1308  000494  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  1309                           
  1310                           ;ecan.c: 416: wipSIDL = wipSIDL + 0x08;
  1311  000496  5026               	movf	convertCANid2Reg@wipSIDL,w,c
  1312  000498  0F08               	addlw	8
  1313  00049A  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  1314                           
  1315                           ;ecan.c: 417: *passedInSIDL = 0xEB & wipSIDL;
  1316  00049C  5026               	movf	convertCANid2Reg@wipSIDL,w,c
  1317  00049E  0BEB               	andlw	235
  1318  0004A0  C020  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1319  0004A4  C021  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1320  0004A8  6EDF               	movwf	indf2,c
  1321                           
  1322                           ;ecan.c: 420: tempPassedInID = tempPassedInID >> 8;
  1323  0004AA  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1324  0004AE  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1325  0004B2  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1326  0004B6  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1327  0004BA  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1328  0004BE  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1329  0004C2  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1330  0004C6  6A25               	clrf	??_convertCANid2Reg+3,c
  1331  0004C8  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1332  0004CC  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1333  0004D0  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1334  0004D4  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1335                           
  1336                           ;ecan.c: 421: *passedInSIDH = 0xFF & tempPassedInID;
  1337  0004D8  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  1338  0004DC  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  1339  0004E0  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1340                           
  1341                           ;ecan.c: 422: } else
  1342  0004E4  0012               	return	
  1343  0004E6                     l1675:
  1344                           
  1345                           ;ecan.c: 423: {
  1346                           ;ecan.c: 424: *passedInEIDH = 0;
  1347  0004E6  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1348  0004EA  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1349  0004EE  0E00               	movlw	0
  1350  0004F0  6EDF               	movwf	indf2,c
  1351                           
  1352                           ;ecan.c: 425: *passedInEIDL = 0;
  1353  0004F2  C01C  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1354  0004F6  C01D  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1355  0004FA  0E00               	movlw	0
  1356  0004FC  6EDF               	movwf	indf2,c
  1357                           
  1358                           ;ecan.c: 426: tempPassedInID = tempPassedInID << 5;
  1359  0004FE  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1360  000502  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1361  000506  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1362  00050A  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1363  00050E  0E05               	movlw	5
  1364  000510                     u405:
  1365  000510  90D8               	bcf	status,0,c
  1366  000512  3622               	rlcf	??_convertCANid2Reg,f,c
  1367  000514  3623               	rlcf	??_convertCANid2Reg+1,f,c
  1368  000516  3624               	rlcf	??_convertCANid2Reg+2,f,c
  1369  000518  3625               	rlcf	??_convertCANid2Reg+3,f,c
  1370  00051A  2EE8               	decfsz	wreg,f,c
  1371  00051C  D7F9               	goto	u405
  1372  00051E  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1373  000522  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1374  000526  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1375  00052A  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1376                           
  1377                           ;ecan.c: 427: *passedInSIDL = 0xFF & tempPassedInID;
  1378  00052E  C020  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1379  000532  C021  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1380  000536  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1381                           
  1382                           ;ecan.c: 428: tempPassedInID = tempPassedInID >> 8;
  1383  00053A  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1384  00053E  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1385  000542  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1386  000546  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1387  00054A  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1388  00054E  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1389  000552  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1390  000556  6A25               	clrf	??_convertCANid2Reg+3,c
  1391  000558  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1392  00055C  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1393  000560  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1394  000564  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1395                           
  1396                           ;ecan.c: 429: *passedInSIDH = 0xFF & tempPassedInID;
  1397  000568  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  1398  00056C  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  1399  000570  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1400  000574  0012               	return	
  1401  000576                     __end_of_convertCANid2Reg:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           intcon	equ	0xFF2
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           indf2	equ	0xFDF
  1408                           postinc2	equ	0xFDE
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _SYSTEM_Initialize *****************
  1414 ;; Defined at:
  1415 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    6
  1436 ;; This function calls:
  1437 ;;		_ECAN_Initialize
  1438 ;;		_INTERRUPT_Initialize
  1439 ;;		_OSCILLATOR_Initialize
  1440 ;;		_PIN_MANAGER_Initialize
  1441 ;;		_TMR0_Initialize
  1442 ;;		_TMR1_Initialize
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text4
  1449  0008BA                     __ptext4:
  1450                           	opt stack 0
  1451  0008BA                     _SYSTEM_Initialize:
  1452                           	opt stack 24
  1453                           
  1454                           ;mcc.c: 114: INTERRUPT_Initialize();
  1455                           
  1456                           ;incstack = 0
  1457  0008BA  EC86  F004         	call	_INTERRUPT_Initialize	;wreg free
  1458                           
  1459                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1460  0008BE  ECFE  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1461                           
  1462                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1463  0008C2  EC6A  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1464                           
  1465                           ;mcc.c: 117: TMR1_Initialize();
  1466  0008C6  ECC4  F003         	call	_TMR1_Initialize	;wreg free
  1467                           
  1468                           ;mcc.c: 118: TMR0_Initialize();
  1469  0008CA  ECE2  F003         	call	_TMR0_Initialize	;wreg free
  1470                           
  1471                           ;mcc.c: 119: ECAN_Initialize();
  1472  0008CE  ECBB  F002         	call	_ECAN_Initialize	;wreg free
  1473  0008D2  0012               	return		;funcret
  1474  0008D4                     __end_of_SYSTEM_Initialize:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           intcon	equ	0xFF2
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           indf2	equ	0xFDF
  1481                           postinc2	equ	0xFDE
  1482                           fsr2h	equ	0xFDA
  1483                           fsr2l	equ	0xFD9
  1484                           status	equ	0xFD8
  1485                           
  1486 ;; *************** function _TMR1_Initialize *****************
  1487 ;; Defined at:
  1488 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    5
  1509 ;; This function calls:
  1510 ;;		_TMR1_SetInterruptHandler
  1511 ;;		_TMR1_StartTimer
  1512 ;; This function is called by:
  1513 ;;		_SYSTEM_Initialize
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text5
  1518  000788                     __ptext5:
  1519                           	opt stack 0
  1520  000788                     _TMR1_Initialize:
  1521                           	opt stack 24
  1522                           
  1523                           ;tmr1.c: 68: T1CON = 0x00;
  1524                           
  1525                           ;incstack = 0
  1526  000788  0E00               	movlw	0
  1527  00078A  6ECD               	movwf	4045,c	;volatile
  1528                           
  1529                           ;tmr1.c: 71: T1GCON = 0x00;
  1530  00078C  0E00               	movlw	0
  1531  00078E  6EAA               	movwf	4010,c	;volatile
  1532                           
  1533                           ;tmr1.c: 74: TMR1H = 0x63;
  1534  000790  0E63               	movlw	99
  1535  000792  6ECF               	movwf	4047,c	;volatile
  1536                           
  1537                           ;tmr1.c: 77: TMR1L = 0xC0;
  1538  000794  0EC0               	movlw	192
  1539  000796  6ECE               	movwf	4046,c	;volatile
  1540                           
  1541                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1542  000798  50CE               	movf	4046,w,c	;volatile
  1543  00079A  CFCF F017          	movff	4047,??_TMR1_Initialize	;volatile
  1544  00079E  6A18               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1545  0007A0  C017  F018         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1546  0007A4  6A17               	clrf	??_TMR1_Initialize,c
  1547  0007A6  1017               	iorwf	??_TMR1_Initialize,w,c
  1548  0007A8  6E44               	movwf	_timer1ReloadVal,c	;volatile
  1549  0007AA  5018               	movf	??_TMR1_Initialize+1,w,c
  1550  0007AC  6E45               	movwf	_timer1ReloadVal+1,c	;volatile
  1551                           
  1552                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1553  0007AE  909E               	bcf	3998,0,c	;volatile
  1554                           
  1555                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1556  0007B0  809D               	bsf	3997,0,c	;volatile
  1557                           
  1558                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1559  0007B2  0E10               	movlw	low _TMR1_DefaultInterruptHandler
  1560  0007B4  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1561  0007B6  0E09               	movlw	high _TMR1_DefaultInterruptHandler
  1562  0007B8  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1563  0007BA  EC73  F004         	call	_TMR1_SetInterruptHandler	;wreg free
  1564                           
  1565                           ;tmr1.c: 92: TMR1_StartTimer();
  1566  0007BE  EC82  F004         	call	_TMR1_StartTimer	;wreg free
  1567  0007C2  0012               	return		;funcret
  1568  0007C4                     __end_of_TMR1_Initialize:
  1569                           	opt stack 0
  1570                           tblptru	equ	0xFF8
  1571                           intcon	equ	0xFF2
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           indf2	equ	0xFDF
  1575                           postinc2	equ	0xFDE
  1576                           fsr2h	equ	0xFDA
  1577                           fsr2l	equ	0xFD9
  1578                           status	equ	0xFD8
  1579                           
  1580 ;; *************** function _TMR1_StartTimer *****************
  1581 ;; Defined at:
  1582 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    4
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_TMR1_Initialize
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text6
  1611  000904                     __ptext6:
  1612                           	opt stack 0
  1613  000904                     _TMR1_StartTimer:
  1614                           	opt stack 24
  1615                           
  1616                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1617                           
  1618                           ;incstack = 0
  1619  000904  80CD               	bsf	4045,0,c	;volatile
  1620  000906  0012               	return		;funcret
  1621  000908                     __end_of_TMR1_StartTimer:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           indf2	equ	0xFDF
  1628                           postinc2	equ	0xFDE
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _TMR1_SetInterruptHandler *****************
  1634 ;; Defined at:
  1635 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  InterruptHan    2   20[COMRAM] PTR FTN()void 
  1638 ;;		 -> TMR1_DefaultInterruptHandler(1), time_to_send(1), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		_TMR1_Initialize
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text7
  1666  0008E6                     __ptext7:
  1667                           	opt stack 0
  1668  0008E6                     _TMR1_SetInterruptHandler:
  1669                           	opt stack 26
  1670                           
  1671                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  1672                           
  1673                           ;incstack = 0
  1674  0008E6  C015  F042         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1675  0008EA  C016  F043         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1676  0008EE  0012               	return		;funcret
  1677  0008F0                     __end_of_TMR1_SetInterruptHandler:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _TMR0_Initialize *****************
  1690 ;; Defined at:
  1691 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    5
  1712 ;; This function calls:
  1713 ;;		_TMR0_SetInterruptHandler
  1714 ;;		_TMR0_StartTimer
  1715 ;; This function is called by:
  1716 ;;		_SYSTEM_Initialize
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text8
  1721  0007C4                     __ptext8:
  1722                           	opt stack 0
  1723  0007C4                     _TMR0_Initialize:
  1724                           	opt stack 24
  1725                           
  1726                           ;tmr0.c: 71: T0CON = 0x17;
  1727                           
  1728                           ;incstack = 0
  1729  0007C4  0E17               	movlw	23
  1730  0007C6  6ED5               	movwf	4053,c	;volatile
  1731                           
  1732                           ;tmr0.c: 74: TMR0H = 0xF0;
  1733  0007C8  0EF0               	movlw	240
  1734  0007CA  6ED7               	movwf	4055,c	;volatile
  1735                           
  1736                           ;tmr0.c: 77: TMR0L = 0xBD;
  1737  0007CC  0EBD               	movlw	189
  1738  0007CE  6ED6               	movwf	4054,c	;volatile
  1739                           
  1740                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1741  0007D0  50D6               	movf	4054,w,c	;volatile
  1742  0007D2  CFD7 F017          	movff	4055,??_TMR0_Initialize	;volatile
  1743  0007D6  6A18               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1744  0007D8  C017  F018         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1745  0007DC  6A17               	clrf	??_TMR0_Initialize,c
  1746  0007DE  1017               	iorwf	??_TMR0_Initialize,w,c
  1747  0007E0  6E46               	movwf	_timer0ReloadVal,c	;volatile
  1748  0007E2  5018               	movf	??_TMR0_Initialize+1,w,c
  1749  0007E4  6E47               	movwf	_timer0ReloadVal+1,c	;volatile
  1750                           
  1751                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1752  0007E6  94F2               	bcf	intcon,2,c	;volatile
  1753                           
  1754                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1755  0007E8  8AF2               	bsf	intcon,5,c	;volatile
  1756                           
  1757                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1758  0007EA  0E12               	movlw	low _TMR0_DefaultInterruptHandler
  1759  0007EC  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1760  0007EE  0E09               	movlw	high _TMR0_DefaultInterruptHandler
  1761  0007F0  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1762  0007F2  EC78  F004         	call	_TMR0_SetInterruptHandler	;wreg free
  1763                           
  1764                           ;tmr0.c: 92: TMR0_StartTimer();
  1765  0007F6  EC84  F004         	call	_TMR0_StartTimer	;wreg free
  1766  0007FA  0012               	return		;funcret
  1767  0007FC                     __end_of_TMR0_Initialize:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           intcon	equ	0xFF2
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           indf2	equ	0xFDF
  1774                           postinc2	equ	0xFDE
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function _TMR0_StartTimer *****************
  1780 ;; Defined at:
  1781 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		None
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    4
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_TMR0_Initialize
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text9
  1810  000908                     __ptext9:
  1811                           	opt stack 0
  1812  000908                     _TMR0_StartTimer:
  1813                           	opt stack 24
  1814                           
  1815                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1816                           
  1817                           ;incstack = 0
  1818  000908  8ED5               	bsf	4053,7,c	;volatile
  1819  00090A  0012               	return		;funcret
  1820  00090C                     __end_of_TMR0_StartTimer:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           intcon	equ	0xFF2
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           indf2	equ	0xFDF
  1827                           postinc2	equ	0xFDE
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _TMR0_SetInterruptHandler *****************
  1833 ;; Defined at:
  1834 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  InterruptHan    2   20[COMRAM] PTR FTN()void 
  1837 ;;		 -> TMR0_DefaultInterruptHandler(1), updateData(1), 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;Total ram usage:        2 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    4
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;;		_TMR0_Initialize
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text10
  1865  0008F0                     __ptext10:
  1866                           	opt stack 0
  1867  0008F0                     _TMR0_SetInterruptHandler:
  1868                           	opt stack 26
  1869                           
  1870                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1871                           
  1872                           ;incstack = 0
  1873  0008F0  C015  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1874  0008F4  C016  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1875  0008F8  0012               	return		;funcret
  1876  0008FA                     __end_of_TMR0_SetInterruptHandler:
  1877                           	opt stack 0
  1878                           tblptru	equ	0xFF8
  1879                           intcon	equ	0xFF2
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           indf2	equ	0xFDF
  1883                           postinc2	equ	0xFDE
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _PIN_MANAGER_Initialize *****************
  1889 ;; Defined at:
  1890 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    4
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_SYSTEM_Initialize
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text11
  1919  0007FC                     __ptext11:
  1920                           	opt stack 0
  1921  0007FC                     _PIN_MANAGER_Initialize:
  1922                           	opt stack 25
  1923                           
  1924                           ;pin_manager.c: 57: LATA = 0x00;
  1925                           
  1926                           ;incstack = 0
  1927  0007FC  0E00               	movlw	0
  1928  0007FE  6E89               	movwf	3977,c	;volatile
  1929                           
  1930                           ;pin_manager.c: 58: LATB = 0x00;
  1931  000800  0E00               	movlw	0
  1932  000802  6E8A               	movwf	3978,c	;volatile
  1933                           
  1934                           ;pin_manager.c: 59: LATC = 0x00;
  1935  000804  0E00               	movlw	0
  1936  000806  6E8B               	movwf	3979,c	;volatile
  1937                           
  1938                           ;pin_manager.c: 64: TRISA = 0xEF;
  1939  000808  0EEF               	movlw	239
  1940  00080A  6E92               	movwf	3986,c	;volatile
  1941                           
  1942                           ;pin_manager.c: 65: TRISB = 0xCF;
  1943  00080C  0ECF               	movlw	207
  1944  00080E  6E93               	movwf	3987,c	;volatile
  1945                           
  1946                           ;pin_manager.c: 66: TRISC = 0xBF;
  1947  000810  0EBF               	movlw	191
  1948  000812  6E94               	movwf	3988,c	;volatile
  1949                           
  1950                           ;pin_manager.c: 71: ANCON0 = 0x1F;
  1951  000814  0E1F               	movlw	31
  1952  000816  010F               	movlb	15	; () banked
  1953  000818  6F5D               	movwf	93,b	;volatile
  1954                           
  1955                           ;pin_manager.c: 72: ANCON1 = 0x07;
  1956  00081A  0E07               	movlw	7
  1957  00081C  010F               	movlb	15	; () banked
  1958  00081E  6F5C               	movwf	92,b	;volatile
  1959                           
  1960                           ; BSR set to: 15
  1961                           ;pin_manager.c: 77: WPUB = 0xFF;
  1962  000820  010F               	movlb	15	; () banked
  1963  000822  695B               	setf	91,b	;volatile
  1964                           
  1965                           ; BSR set to: 15
  1966  000824  0012               	return		;funcret
  1967  000826                     __end_of_PIN_MANAGER_Initialize:
  1968                           	opt stack 0
  1969                           tblptru	equ	0xFF8
  1970                           intcon	equ	0xFF2
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           indf2	equ	0xFDF
  1974                           postinc2	equ	0xFDE
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _OSCILLATOR_Initialize *****************
  1980 ;; Defined at:
  1981 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    4
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_SYSTEM_Initialize
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text12
  2010  0008D4                     __ptext12:
  2011                           	opt stack 0
  2012  0008D4                     _OSCILLATOR_Initialize:
  2013                           	opt stack 25
  2014                           
  2015                           ;mcc.c: 125: OSCCON = 0x70;
  2016                           
  2017                           ; BSR set to: 15
  2018                           ;incstack = 0
  2019  0008D4  0E70               	movlw	112
  2020  0008D6  6ED3               	movwf	4051,c	;volatile
  2021                           
  2022                           ;mcc.c: 127: OSCCON2 = 0x00;
  2023  0008D8  0E00               	movlw	0
  2024  0008DA  6ED2               	movwf	4050,c	;volatile
  2025                           
  2026                           ;mcc.c: 129: OSCTUNE = 0x00;
  2027  0008DC  0E00               	movlw	0
  2028  0008DE  6E9B               	movwf	3995,c	;volatile
  2029                           
  2030                           ;mcc.c: 131: REFOCON = 0x00;
  2031  0008E0  0E00               	movlw	0
  2032  0008E2  6E9A               	movwf	3994,c	;volatile
  2033  0008E4  0012               	return		;funcret
  2034  0008E6                     __end_of_OSCILLATOR_Initialize:
  2035                           	opt stack 0
  2036                           tblptru	equ	0xFF8
  2037                           intcon	equ	0xFF2
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _INTERRUPT_Initialize *****************
  2047 ;; Defined at:
  2048 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		None
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    4
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_SYSTEM_Initialize
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text13
  2077  00090C                     __ptext13:
  2078                           	opt stack 0
  2079  00090C                     _INTERRUPT_Initialize:
  2080                           	opt stack 25
  2081                           
  2082                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2083                           
  2084                           ;incstack = 0
  2085  00090C  9ED0               	bcf	4048,7,c	;volatile
  2086  00090E  0012               	return		;funcret
  2087  000910                     __end_of_INTERRUPT_Initialize:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           indf2	equ	0xFDF
  2094                           postinc2	equ	0xFDE
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _ECAN_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 63 in file "mcc_generated_files/ecan.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    4
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_SYSTEM_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text14
  2130  000576                     __ptext14:
  2131                           	opt stack 0
  2132  000576                     _ECAN_Initialize:
  2133                           	opt stack 25
  2134                           
  2135                           ;ecan.c: 65: CANCON = 0x80;
  2136                           
  2137                           ;incstack = 0
  2138  000576  0E80               	movlw	128
  2139  000578  6E6F               	movwf	3951,c	;volatile
  2140  00057A                     l1247:
  2141  00057A  506E               	movf	3950,w,c	;volatile
  2142  00057C  0BE0               	andlw	224
  2143  00057E  0A80               	xorlw	128
  2144  000580  A4D8               	btfss	status,2,c
  2145  000582  D7FB               	goto	l1247
  2146                           
  2147                           ;ecan.c: 71: ECANCON = 0x00;
  2148  000584  0E00               	movlw	0
  2149  000586  6E72               	movwf	3954,c	;volatile
  2150                           
  2151                           ;ecan.c: 86: RXM0EIDH = 0xFF;
  2152  000588  010E               	movlb	14	; () banked
  2153  00058A  69FA               	setf	250,b	;volatile
  2154                           
  2155                           ; BSR set to: 14
  2156                           ;ecan.c: 87: RXM0EIDL = 0xFF;
  2157  00058C  010E               	movlb	14	; () banked
  2158  00058E  69FB               	setf	251,b	;volatile
  2159                           
  2160                           ; BSR set to: 14
  2161                           ;ecan.c: 88: RXM0SIDH = 0xFF;
  2162  000590  010E               	movlb	14	; () banked
  2163  000592  69F8               	setf	248,b	;volatile
  2164                           
  2165                           ; BSR set to: 14
  2166                           ;ecan.c: 89: RXM0SIDL = 0xFF;
  2167  000594  010E               	movlb	14	; () banked
  2168  000596  69F9               	setf	249,b	;volatile
  2169                           
  2170                           ; BSR set to: 14
  2171                           ;ecan.c: 91: RXM1EIDH = 0xFF;
  2172  000598  010E               	movlb	14	; () banked
  2173  00059A  69FE               	setf	254,b	;volatile
  2174                           
  2175                           ; BSR set to: 14
  2176                           ;ecan.c: 92: RXM1EIDL = 0xFF;
  2177  00059C  010E               	movlb	14	; () banked
  2178  00059E  69FF               	setf	255,b	;volatile
  2179                           
  2180                           ; BSR set to: 14
  2181                           ;ecan.c: 93: RXM1SIDH = 0xFF;
  2182  0005A0  010E               	movlb	14	; () banked
  2183  0005A2  69FC               	setf	252,b	;volatile
  2184                           
  2185                           ; BSR set to: 14
  2186                           ;ecan.c: 94: RXM1SIDL = 0xFF;
  2187  0005A4  010E               	movlb	14	; () banked
  2188  0005A6  69FD               	setf	253,b	;volatile
  2189                           
  2190                           ;ecan.c: 100: RXF0EIDH = 0x00;
  2191  0005A8  0E00               	movlw	0
  2192  0005AA  010E               	movlb	14	; () banked
  2193  0005AC  6FE2               	movwf	226,b	;volatile
  2194                           
  2195                           ;ecan.c: 101: RXF0EIDL = 0x00;
  2196  0005AE  0E00               	movlw	0
  2197  0005B0  010E               	movlb	14	; () banked
  2198  0005B2  6FE3               	movwf	227,b	;volatile
  2199                           
  2200                           ;ecan.c: 102: RXF0SIDH = 0xC8;
  2201  0005B4  0EC8               	movlw	200
  2202  0005B6  010E               	movlb	14	; () banked
  2203  0005B8  6FE0               	movwf	224,b	;volatile
  2204                           
  2205                           ;ecan.c: 103: RXF0SIDL = 0x00;
  2206  0005BA  0E00               	movlw	0
  2207  0005BC  010E               	movlb	14	; () banked
  2208  0005BE  6FE1               	movwf	225,b	;volatile
  2209                           
  2210                           ;ecan.c: 105: RXF1EIDH = 0x00;
  2211  0005C0  0E00               	movlw	0
  2212  0005C2  010E               	movlb	14	; () banked
  2213  0005C4  6FE6               	movwf	230,b	;volatile
  2214                           
  2215                           ;ecan.c: 106: RXF1EIDL = 0x00;
  2216  0005C6  0E00               	movlw	0
  2217  0005C8  010E               	movlb	14	; () banked
  2218  0005CA  6FE7               	movwf	231,b	;volatile
  2219                           
  2220                           ;ecan.c: 107: RXF1SIDH = 0x00;
  2221  0005CC  0E00               	movlw	0
  2222  0005CE  010E               	movlb	14	; () banked
  2223  0005D0  6FE4               	movwf	228,b	;volatile
  2224                           
  2225                           ;ecan.c: 108: RXF1SIDL = 0x00;
  2226  0005D2  0E00               	movlw	0
  2227  0005D4  010E               	movlb	14	; () banked
  2228  0005D6  6FE5               	movwf	229,b	;volatile
  2229                           
  2230                           ;ecan.c: 110: RXF2EIDH = 0x00;
  2231  0005D8  0E00               	movlw	0
  2232  0005DA  010E               	movlb	14	; () banked
  2233  0005DC  6FEA               	movwf	234,b	;volatile
  2234                           
  2235                           ;ecan.c: 111: RXF2EIDL = 0x00;
  2236  0005DE  0E00               	movlw	0
  2237  0005E0  010E               	movlb	14	; () banked
  2238  0005E2  6FEB               	movwf	235,b	;volatile
  2239                           
  2240                           ;ecan.c: 112: RXF2SIDH = 0x00;
  2241  0005E4  0E00               	movlw	0
  2242  0005E6  010E               	movlb	14	; () banked
  2243  0005E8  6FE8               	movwf	232,b	;volatile
  2244                           
  2245                           ;ecan.c: 113: RXF2SIDL = 0x00;
  2246  0005EA  0E00               	movlw	0
  2247  0005EC  010E               	movlb	14	; () banked
  2248  0005EE  6FE9               	movwf	233,b	;volatile
  2249                           
  2250                           ;ecan.c: 115: RXF3EIDH = 0x00;
  2251  0005F0  0E00               	movlw	0
  2252  0005F2  010E               	movlb	14	; () banked
  2253  0005F4  6FEE               	movwf	238,b	;volatile
  2254                           
  2255                           ;ecan.c: 116: RXF3EIDL = 0x00;
  2256  0005F6  0E00               	movlw	0
  2257  0005F8  010E               	movlb	14	; () banked
  2258  0005FA  6FEF               	movwf	239,b	;volatile
  2259                           
  2260                           ;ecan.c: 117: RXF3SIDH = 0x00;
  2261  0005FC  0E00               	movlw	0
  2262  0005FE  010E               	movlb	14	; () banked
  2263  000600  6FEC               	movwf	236,b	;volatile
  2264                           
  2265                           ;ecan.c: 118: RXF3SIDL = 0x00;
  2266  000602  0E00               	movlw	0
  2267  000604  010E               	movlb	14	; () banked
  2268  000606  6FED               	movwf	237,b	;volatile
  2269                           
  2270                           ;ecan.c: 120: RXF4EIDH = 0x00;
  2271  000608  0E00               	movlw	0
  2272  00060A  010E               	movlb	14	; () banked
  2273  00060C  6FF2               	movwf	242,b	;volatile
  2274                           
  2275                           ;ecan.c: 121: RXF4EIDL = 0x00;
  2276  00060E  0E00               	movlw	0
  2277  000610  010E               	movlb	14	; () banked
  2278  000612  6FF3               	movwf	243,b	;volatile
  2279                           
  2280                           ;ecan.c: 122: RXF4SIDH = 0x00;
  2281  000614  0E00               	movlw	0
  2282  000616  010E               	movlb	14	; () banked
  2283  000618  6FF0               	movwf	240,b	;volatile
  2284                           
  2285                           ;ecan.c: 123: RXF4SIDL = 0x00;
  2286  00061A  0E00               	movlw	0
  2287  00061C  010E               	movlb	14	; () banked
  2288  00061E  6FF1               	movwf	241,b	;volatile
  2289                           
  2290                           ;ecan.c: 125: RXF5EIDH = 0x00;
  2291  000620  0E00               	movlw	0
  2292  000622  010E               	movlb	14	; () banked
  2293  000624  6FF6               	movwf	246,b	;volatile
  2294                           
  2295                           ;ecan.c: 126: RXF5EIDL = 0x00;
  2296  000626  0E00               	movlw	0
  2297  000628  010E               	movlb	14	; () banked
  2298  00062A  6FF7               	movwf	247,b	;volatile
  2299                           
  2300                           ;ecan.c: 127: RXF5SIDH = 0x00;
  2301  00062C  0E00               	movlw	0
  2302  00062E  010E               	movlb	14	; () banked
  2303  000630  6FF4               	movwf	244,b	;volatile
  2304                           
  2305                           ;ecan.c: 128: RXF5SIDL = 0x00;
  2306  000632  0E00               	movlw	0
  2307  000634  010E               	movlb	14	; () banked
  2308  000636  6FF5               	movwf	245,b	;volatile
  2309                           
  2310                           ;ecan.c: 143: BRGCON1 = 0x00;
  2311  000638  0E00               	movlw	0
  2312  00063A  010E               	movlb	14	; () banked
  2313  00063C  6F43               	movwf	67,b	;volatile
  2314                           
  2315                           ;ecan.c: 144: BRGCON2 = 0x98;
  2316  00063E  0E98               	movlw	152
  2317  000640  010E               	movlb	14	; () banked
  2318  000642  6F44               	movwf	68,b	;volatile
  2319                           
  2320                           ;ecan.c: 145: BRGCON3 = 0x01;
  2321  000644  0E01               	movlw	1
  2322  000646  010E               	movlb	14	; () banked
  2323  000648  6F45               	movwf	69,b	;volatile
  2324                           
  2325                           ;ecan.c: 147: CANCON = 0x00;
  2326  00064A  0E00               	movlw	0
  2327  00064C  6E6F               	movwf	3951,c	;volatile
  2328  00064E                     l1267:
  2329  00064E  CF6E F015          	movff	3950,??_ECAN_Initialize	;volatile
  2330  000652  0EE0               	movlw	224
  2331  000654  1615               	andwf	??_ECAN_Initialize,f,c
  2332  000656  B4D8               	btfsc	status,2,c
  2333  000658  0012               	return	
  2334  00065A  D7F9               	goto	l1267
  2335  00065C                     __end_of_ECAN_Initialize:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           intcon	equ	0xFF2
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           indf2	equ	0xFDF
  2342                           postinc2	equ	0xFDE
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _INTERRUPT_InterruptManager *****************
  2348 ;; Defined at:
  2349 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;Total ram usage:       14 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    3
  2370 ;; This function calls:
  2371 ;;		_TMR0_ISR
  2372 ;;		_TMR1_ISR
  2373 ;; This function is called by:
  2374 ;;		Interrupt level 2
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	intcode
  2379  000008                     __pintcode:
  2380                           	opt stack 0
  2381  000008                     _INTERRUPT_InterruptManager:
  2382                           	opt stack 24
  2383                           
  2384                           ;incstack = 0
  2385  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2386  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  2387  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2388  000012  CFE9 F009          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2389  000016  CFEA F00A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2390  00001A  CFE1 F00B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2391  00001E  CFE2 F00C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2392  000022  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2393  000026  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2394  00002A  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2395  00002E  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2396  000032  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2397  000036  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2398  00003A  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2399  00003E  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2400                           
  2401                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2402  000042  BAF2               	btfsc	intcon,5,c	;volatile
  2403  000044  A4F2               	btfss	intcon,2,c	;volatile
  2404  000046  D003               	goto	i2l447
  2405                           
  2406                           ;interrupt_manager.c: 61: {
  2407                           ;interrupt_manager.c: 62: TMR0_ISR();
  2408  000048  EC28  F004         	call	_TMR0_ISR	;wreg free
  2409                           
  2410                           ;interrupt_manager.c: 63: }
  2411  00004C  D006               	goto	i2l451
  2412  00004E                     i2l447:
  2413                           
  2414                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2415  00004E  BCF2               	btfsc	intcon,6,c	;volatile
  2416  000050  A09D               	btfss	3997,0,c	;volatile
  2417  000052  D003               	goto	i2l451
  2418  000054  B09E               	btfsc	3998,0,c	;volatile
  2419                           
  2420                           ;interrupt_manager.c: 65: {
  2421                           ;interrupt_manager.c: 66: TMR1_ISR();
  2422  000056  EC13  F004         	call	_TMR1_ISR	;wreg free
  2423  00005A                     i2l451:
  2424  00005A  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2425  00005E  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2426  000062  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2427  000066  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2428  00006A  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2429  00006E  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2430  000072  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2431  000076  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2432  00007A  C00C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2433  00007E  C00B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2434  000082  C00A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2435  000086  C009  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2436  00008A  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2437  00008E  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2438  000092  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2439  000094  0011               	retfie		f
  2440  000096                     __end_of_INTERRUPT_InterruptManager:
  2441                           	opt stack 0
  2442                           pclatu	equ	0xFFB
  2443                           pclath	equ	0xFFA
  2444                           tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           prodh	equ	0xFF4
  2449                           prodl	equ	0xFF3
  2450                           intcon	equ	0xFF2
  2451                           postinc0	equ	0xFEE
  2452                           fsr0h	equ	0xFEA
  2453                           fsr0l	equ	0xFE9
  2454                           wreg	equ	0xFE8
  2455                           fsr1h	equ	0xFE2
  2456                           fsr1l	equ	0xFE1
  2457                           indf2	equ	0xFDF
  2458                           postinc2	equ	0xFDE
  2459                           fsr2h	equ	0xFDA
  2460                           fsr2l	equ	0xFD9
  2461                           status	equ	0xFD8
  2462                           
  2463 ;; *************** function _TMR1_ISR *****************
  2464 ;; Defined at:
  2465 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    1
  2486 ;; This function calls:
  2487 ;;		Absolute function
  2488 ;;		_TMR1_DefaultInterruptHandler
  2489 ;;		_time_to_send
  2490 ;; This function is called by:
  2491 ;;		_INTERRUPT_InterruptManager
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text16
  2496  000826                     __ptext16:
  2497                           	opt stack 0
  2498  000826                     _TMR1_ISR:
  2499                           	opt stack 25
  2500                           
  2501                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  2502                           
  2503                           ;incstack = 0
  2504  000826  909E               	bcf	3998,0,c	;volatile
  2505                           
  2506                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  2507  000828  5045               	movf	_timer1ReloadVal+1,w,c	;volatile
  2508  00082A  6ECF               	movwf	4047,c	;volatile
  2509                           
  2510                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  2511  00082C  C044  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2512                           
  2513                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  2514  000830  5042               	movf	_TMR1_InterruptHandler,w,c
  2515  000832  1043               	iorwf	_TMR1_InterruptHandler+1,w,c
  2516  000834  B4D8               	btfsc	status,2,c
  2517  000836  0012               	return	
  2518                           
  2519                           ;tmr1.c: 170: {
  2520                           ;tmr1.c: 171: TMR1_InterruptHandler();
  2521  000838  D801               	call	i2u18_48
  2522  00083A  0012               	return	
  2523  00083C                     i2u18_48:
  2524  00083C  0005               	push	
  2525  00083E  6EFA               	movwf	pclath,c
  2526  000840  5042               	movf	_TMR1_InterruptHandler,w,c
  2527  000842  6EFD               	movwf	tosl,c
  2528  000844  5043               	movf	_TMR1_InterruptHandler+1,w,c
  2529  000846  6EFE               	movwf	tosh,c
  2530  000848  50F8               	movf	tblptru,w,c
  2531  00084A  6EFF               	movwf	tosu,c
  2532  00084C  50FA               	movf	pclath,w,c
  2533  00084E  0012               	return		;indir
  2534  000850                     __end_of_TMR1_ISR:
  2535                           	opt stack 0
  2536                           tosu	equ	0xFFF
  2537                           tosh	equ	0xFFE
  2538                           tosl	equ	0xFFD
  2539                           pclatu	equ	0xFFB
  2540                           pclath	equ	0xFFA
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           prodh	equ	0xFF4
  2546                           prodl	equ	0xFF3
  2547                           intcon	equ	0xFF2
  2548                           postinc0	equ	0xFEE
  2549                           fsr0h	equ	0xFEA
  2550                           fsr0l	equ	0xFE9
  2551                           wreg	equ	0xFE8
  2552                           fsr1h	equ	0xFE2
  2553                           fsr1l	equ	0xFE1
  2554                           indf2	equ	0xFDF
  2555                           postinc2	equ	0xFDE
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2561 ;; Defined at:
  2562 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		None
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_TMR1_Initialize
  2586 ;;		_TMR1_ISR
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text17
  2591  000910                     __ptext17:
  2592                           	opt stack 0
  2593  000910                     _TMR1_DefaultInterruptHandler:
  2594                           	opt stack 25
  2595                           
  2596                           ;incstack = 0
  2597  000910  0012               	return		;funcret
  2598  000912                     __end_of_TMR1_DefaultInterruptHandler:
  2599                           	opt stack 0
  2600                           tosu	equ	0xFFF
  2601                           tosh	equ	0xFFE
  2602                           tosl	equ	0xFFD
  2603                           pclatu	equ	0xFFB
  2604                           pclath	equ	0xFFA
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _time_to_send *****************
  2625 ;; Defined at:
  2626 ;;		line 17 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;;		_TMR1_ISR
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text18
  2655  0008FA                     __ptext18:
  2656                           	opt stack 0
  2657  0008FA                     _time_to_send:
  2658                           	opt stack 25
  2659                           
  2660                           ;main.c: 18: (INTCONbits.GIE = 0);
  2661                           
  2662                           ;incstack = 0
  2663  0008FA  9EF2               	bcf	intcon,7,c	;volatile
  2664                           
  2665                           ;main.c: 19: (INTCONbits.PEIE = 0);
  2666  0008FC  9CF2               	bcf	intcon,6,c	;volatile
  2667                           
  2668                           ;main.c: 20: send = 1;
  2669  0008FE  0E01               	movlw	1
  2670  000900  6E33               	movwf	_send,c
  2671  000902  0012               	return		;funcret
  2672  000904                     __end_of_time_to_send:
  2673                           	opt stack 0
  2674                           tosu	equ	0xFFF
  2675                           tosh	equ	0xFFE
  2676                           tosl	equ	0xFFD
  2677                           pclatu	equ	0xFFB
  2678                           pclath	equ	0xFFA
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           fsr0h	equ	0xFEA
  2688                           fsr0l	equ	0xFE9
  2689                           wreg	equ	0xFE8
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           indf2	equ	0xFDF
  2693                           postinc2	equ	0xFDE
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _TMR0_ISR *****************
  2699 ;; Defined at:
  2700 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		Absolute function
  2723 ;;		_TMR0_DefaultInterruptHandler
  2724 ;;		_updateData
  2725 ;; This function is called by:
  2726 ;;		_INTERRUPT_InterruptManager
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text19
  2731  000850                     __ptext19:
  2732                           	opt stack 0
  2733  000850                     _TMR0_ISR:
  2734                           	opt stack 24
  2735                           
  2736                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  2737                           
  2738                           ;incstack = 0
  2739  000850  94F2               	bcf	intcon,2,c	;volatile
  2740                           
  2741                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  2742  000852  5047               	movf	_timer0ReloadVal+1,w,c	;volatile
  2743  000854  6ED7               	movwf	4055,c	;volatile
  2744                           
  2745                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  2746  000856  C046  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2747                           
  2748                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  2749  00085A  5048               	movf	_TMR0_InterruptHandler,w,c
  2750  00085C  1049               	iorwf	_TMR0_InterruptHandler+1,w,c
  2751  00085E  B4D8               	btfsc	status,2,c
  2752  000860  0012               	return	
  2753                           
  2754                           ;tmr0.c: 146: {
  2755                           ;tmr0.c: 147: TMR0_InterruptHandler();
  2756  000862  D801               	call	i2u51_48
  2757  000864  0012               	return	
  2758  000866                     i2u51_48:
  2759  000866  0005               	push	
  2760  000868  6EFA               	movwf	pclath,c
  2761  00086A  5048               	movf	_TMR0_InterruptHandler,w,c
  2762  00086C  6EFD               	movwf	tosl,c
  2763  00086E  5049               	movf	_TMR0_InterruptHandler+1,w,c
  2764  000870  6EFE               	movwf	tosh,c
  2765  000872  50F8               	movf	tblptru,w,c
  2766  000874  6EFF               	movwf	tosu,c
  2767  000876  50FA               	movf	pclath,w,c
  2768  000878  0012               	return		;indir
  2769  00087A                     __end_of_TMR0_ISR:
  2770                           	opt stack 0
  2771                           tosu	equ	0xFFF
  2772                           tosh	equ	0xFFE
  2773                           tosl	equ	0xFFD
  2774                           pclatu	equ	0xFFB
  2775                           pclath	equ	0xFFA
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           intcon	equ	0xFF2
  2783                           postinc0	equ	0xFEE
  2784                           fsr0h	equ	0xFEA
  2785                           fsr0l	equ	0xFE9
  2786                           wreg	equ	0xFE8
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           postinc2	equ	0xFDE
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2796 ;; Defined at:
  2797 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		None
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_TMR0_Initialize
  2821 ;;		_TMR0_ISR
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text20
  2826  000912                     __ptext20:
  2827                           	opt stack 0
  2828  000912                     _TMR0_DefaultInterruptHandler:
  2829                           	opt stack 25
  2830                           
  2831                           ;incstack = 0
  2832  000912  0012               	return		;funcret
  2833  000914                     __end_of_TMR0_DefaultInterruptHandler:
  2834                           	opt stack 0
  2835                           tosu	equ	0xFFF
  2836                           tosh	equ	0xFFE
  2837                           tosl	equ	0xFFD
  2838                           pclatu	equ	0xFFB
  2839                           pclath	equ	0xFFA
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           postinc0	equ	0xFEE
  2848                           fsr0h	equ	0xFEA
  2849                           fsr0l	equ	0xFE9
  2850                           wreg	equ	0xFE8
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _updateData *****************
  2860 ;; Defined at:
  2861 ;;		line 9 in file "main.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    1
  2882 ;; This function calls:
  2883 ;;		___awmod
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;;		_TMR0_ISR
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text21
  2891  00087A                     __ptext21:
  2892                           	opt stack 0
  2893  00087A                     _updateData:
  2894                           	opt stack 24
  2895                           
  2896                           ;main.c: 10: (INTCONbits.GIE = 0);
  2897                           
  2898                           ;incstack = 0
  2899  00087A  9EF2               	bcf	intcon,7,c	;volatile
  2900                           
  2901                           ;main.c: 11: (INTCONbits.PEIE = 0);
  2902  00087C  9CF2               	bcf	intcon,6,c	;volatile
  2903                           
  2904                           ;main.c: 12: data = (data+1)%127;
  2905  00087E  0E01               	movlw	1
  2906  000880  2432               	addwf	_data,w,c
  2907  000882  6E01               	movwf	___awmod@dividend,c
  2908  000884  6A02               	clrf	___awmod@dividend+1,c
  2909  000886  0E00               	movlw	0
  2910  000888  2202               	addwfc	___awmod@dividend+1,f,c
  2911  00088A  0E00               	movlw	0
  2912  00088C  6E04               	movwf	___awmod@divisor+1,c
  2913  00088E  0E7F               	movlw	127
  2914  000890  6E03               	movwf	___awmod@divisor,c
  2915  000892  EC69  F003         	call	___awmod	;wreg free
  2916  000896  5001               	movf	?___awmod,w,c
  2917  000898  6E32               	movwf	_data,c
  2918                           
  2919                           ;main.c: 13: (INTCONbits.GIE = 1);
  2920  00089A  8EF2               	bsf	intcon,7,c	;volatile
  2921                           
  2922                           ;main.c: 14: (INTCONbits.PEIE = 1);
  2923  00089C  8CF2               	bsf	intcon,6,c	;volatile
  2924  00089E  0012               	return		;funcret
  2925  0008A0                     __end_of_updateData:
  2926                           	opt stack 0
  2927                           tosu	equ	0xFFF
  2928                           tosh	equ	0xFFE
  2929                           tosl	equ	0xFFD
  2930                           pclatu	equ	0xFFB
  2931                           pclath	equ	0xFFA
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           fsr0h	equ	0xFEA
  2941                           fsr0l	equ	0xFE9
  2942                           wreg	equ	0xFE8
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function ___awmod *****************
  2952 ;; Defined at:
  2953 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  dividend        2    0[COMRAM] int 
  2956 ;;  divisor         2    2[COMRAM] int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  sign            1    5[COMRAM] unsigned char 
  2959 ;;  counter         1    4[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  2    0[COMRAM] int 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;Total ram usage:        6 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_updateData
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text22
  2983  0006D2                     __ptext22:
  2984                           	opt stack 0
  2985  0006D2                     ___awmod:
  2986                           	opt stack 24
  2987                           
  2988                           ;incstack = 0
  2989  0006D2  0E00               	movlw	0
  2990  0006D4  6E06               	movwf	___awmod@sign,c
  2991  0006D6  AE02               	btfss	___awmod@dividend+1,7,c
  2992  0006D8  D006               	goto	i2l1697
  2993  0006DA  6C01               	negf	___awmod@dividend,c
  2994  0006DC  1E02               	comf	___awmod@dividend+1,f,c
  2995  0006DE  B0D8               	btfsc	status,0,c
  2996  0006E0  2A02               	incf	___awmod@dividend+1,f,c
  2997  0006E2  0E01               	movlw	1
  2998  0006E4  6E06               	movwf	___awmod@sign,c
  2999  0006E6                     i2l1697:
  3000  0006E6  AE04               	btfss	___awmod@divisor+1,7,c
  3001  0006E8  D004               	goto	i2l1701
  3002  0006EA  6C03               	negf	___awmod@divisor,c
  3003  0006EC  1E04               	comf	___awmod@divisor+1,f,c
  3004  0006EE  B0D8               	btfsc	status,0,c
  3005  0006F0  2A04               	incf	___awmod@divisor+1,f,c
  3006  0006F2                     i2l1701:
  3007  0006F2  5003               	movf	___awmod@divisor,w,c
  3008  0006F4  1004               	iorwf	___awmod@divisor+1,w,c
  3009  0006F6  B4D8               	btfsc	status,2,c
  3010  0006F8  D018               	goto	i2l1717
  3011  0006FA  0E01               	movlw	1
  3012  0006FC  6E05               	movwf	___awmod@counter,c
  3013  0006FE  D004               	goto	i2l1707
  3014  000700                     i2l1705:
  3015  000700  90D8               	bcf	status,0,c
  3016  000702  3603               	rlcf	___awmod@divisor,f,c
  3017  000704  3604               	rlcf	___awmod@divisor+1,f,c
  3018  000706  2A05               	incf	___awmod@counter,f,c
  3019  000708                     i2l1707:
  3020  000708  AE04               	btfss	___awmod@divisor+1,7,c
  3021  00070A  D7FA               	goto	i2l1705
  3022  00070C                     i2l1709:
  3023  00070C  5003               	movf	___awmod@divisor,w,c
  3024  00070E  5C01               	subwf	___awmod@dividend,w,c
  3025  000710  5004               	movf	___awmod@divisor+1,w,c
  3026  000712  5802               	subwfb	___awmod@dividend+1,w,c
  3027  000714  A0D8               	btfss	status,0,c
  3028  000716  D004               	goto	i2l1713
  3029  000718  5003               	movf	___awmod@divisor,w,c
  3030  00071A  5E01               	subwf	___awmod@dividend,f,c
  3031  00071C  5004               	movf	___awmod@divisor+1,w,c
  3032  00071E  5A02               	subwfb	___awmod@dividend+1,f,c
  3033  000720                     i2l1713:
  3034  000720  90D8               	bcf	status,0,c
  3035  000722  3204               	rrcf	___awmod@divisor+1,f,c
  3036  000724  3203               	rrcf	___awmod@divisor,f,c
  3037  000726  2E05               	decfsz	___awmod@counter,f,c
  3038  000728  D7F1               	goto	i2l1709
  3039  00072A                     i2l1717:
  3040  00072A  5006               	movf	___awmod@sign,w,c
  3041  00072C  B4D8               	btfsc	status,2,c
  3042  00072E  D004               	goto	i2l1721
  3043  000730  6C01               	negf	___awmod@dividend,c
  3044  000732  1E02               	comf	___awmod@dividend+1,f,c
  3045  000734  B0D8               	btfsc	status,0,c
  3046  000736  2A02               	incf	___awmod@dividend+1,f,c
  3047  000738                     i2l1721:
  3048  000738  C001  F001         	movff	___awmod@dividend,?___awmod
  3049  00073C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3050  000740  0012               	return	
  3051  000742                     __end_of___awmod:
  3052                           	opt stack 0
  3053  0000                     tosu	equ	0xFFF
  3054                           tosh	equ	0xFFE
  3055                           tosl	equ	0xFFD
  3056                           pclatu	equ	0xFFB
  3057                           pclath	equ	0xFFA
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           prodh	equ	0xFF4
  3063                           prodl	equ	0xFF3
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           fsr0h	equ	0xFEA
  3067                           fsr0l	equ	0xFE9
  3068                           wreg	equ	0xFE8
  3069                           fsr1h	equ	0xFE2
  3070                           fsr1l	equ	0xFE1
  3071                           indf2	equ	0xFDF
  3072                           postinc2	equ	0xFDE
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           tosu	equ	0xFFF
  3077                           tosh	equ	0xFFE
  3078                           tosl	equ	0xFFD
  3079                           pclatu	equ	0xFFB
  3080                           pclath	equ	0xFFA
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           fsr0h	equ	0xFEA
  3090                           fsr0l	equ	0xFE9
  3091                           wreg	equ	0xFE8
  3092                           fsr1h	equ	0xFE2
  3093                           fsr1l	equ	0xFE1
  3094                           indf2	equ	0xFDF
  3095                           postinc2	equ	0xFDE
  3096                           fsr2h	equ	0xFDA
  3097                           fsr2l	equ	0xFD9
  3098                           status	equ	0xFD8
  3099                           
  3100                           	psect	text23
  3101  000000                     __ptext23:
  3102                           	opt stack 0
  3103                           tosu	equ	0xFFF
  3104                           tosh	equ	0xFFE
  3105                           tosl	equ	0xFFD
  3106                           pclatu	equ	0xFFB
  3107                           pclath	equ	0xFFA
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           intcon	equ	0xFF2
  3115                           postinc0	equ	0xFEE
  3116                           fsr0h	equ	0xFEA
  3117                           fsr0l	equ	0xFE9
  3118                           wreg	equ	0xFE8
  3119                           fsr1h	equ	0xFE2
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127                           	psect	rparam
  3128  0000                     tosu	equ	0xFFF
  3129                           tosh	equ	0xFFE
  3130                           tosl	equ	0xFFD
  3131                           pclatu	equ	0xFFB
  3132                           pclath	equ	0xFFA
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           intcon	equ	0xFF2
  3140                           postinc0	equ	0xFEE
  3141                           fsr0h	equ	0xFEA
  3142                           fsr0l	equ	0xFE9
  3143                           wreg	equ	0xFE8
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           postinc2	equ	0xFDE
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152                           	psect	temp
  3153  00004A                     btemp:
  3154                           	opt stack 0
  3155  00004A                     	ds	1
  3156  0000                     int$flags	set	btemp
  3157                           tosu	equ	0xFFF
  3158                           tosh	equ	0xFFE
  3159                           tosl	equ	0xFFD
  3160                           pclatu	equ	0xFFB
  3161                           pclath	equ	0xFFA
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           postinc0	equ	0xFEE
  3170                           fsr0h	equ	0xFEA
  3171                           fsr0l	equ	0xFE9
  3172                           wreg	equ	0xFE8
  3173                           fsr1h	equ	0xFE2
  3174                           fsr1l	equ	0xFE1
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      73
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), time_to_send(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), time_to_send(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), updateData(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), updateData(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_transmit
    _transmit->_CAN_transmit
    _CAN_transmit->_convertCANid2Reg
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _updateData->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4234
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                           _transmit
 ---------------------------------------------------------------------------------
 (1) _transmit                                             4     0      4    3538
                                             45 COMRAM     4     0      4
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (2) _CAN_transmit                                         7     5      2    3288
                                             38 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (3) _convertCANid2Reg                                    18     5     13    1928
                                             20 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             22 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             22 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     448
                                              6 COMRAM    14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _time_to_send *
 ---------------------------------------------------------------------------------
 (6) _time_to_send                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     448
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                         _updateData *
 ---------------------------------------------------------------------------------
 (6) _updateData                                           0     0      0     448
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _transmit
     _CAN_transmit
       _convertCANid2Reg

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _updateData *
       ___awmod
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _time_to_send *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      49       1       77.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49       6        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jan 18 16:19:52 2018

                __size_of_ECAN_Initialize 00E6                               __CFG_BORV$3 000000  
                         _timer0ReloadVal 0046                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l296 01BC  
                                     l298 02CA                              __CFG_CPB$OFF 000000  
                                     u405 0510                              __CFG_CPD$OFF 000000  
                                     u395 0470                           _timer1ReloadVal 0044  
                            ___awmod@sign 0006                                       tosl 000FFD  
                                     wreg 000FE8                                      l1247 057A  
                                    l1267 064E                                      l1911 06CE  
                                    l1903 0686                                      l1905 0688  
                                    l1675 04E6                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _WPUB 000F5B                                      _data 0032  
                                    _main 065C              convertCANid2Reg@passedInEIDH 001A  
            convertCANid2Reg@passedInEIDL 001C                                      _send 0033  
                         _TMR0_StartTimer 0908                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004A              convertCANid2Reg@passedInSIDH 001E  
            convertCANid2Reg@passedInSIDL 0020                   CAN_transmit@returnValue 0029  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0096                             __CFG_IESO$OFF 000000  
              ??_TMR1_SetInterruptHandler 0017                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 07FC  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 08E6                                     ?_main 0001  
                         __end_of___awmod 0742                           _TMR1_StartTimer 0904  
                                   _T0CON 000FD5                                     _T1CON 000FCD  
                                   i2l451 005A                                     i2l447 004E  
                                   _TMR0H 000FD7                                     _TMR1H 000FCF  
                                   _TMR0L 000FD6                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0015  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 087A                          __end_of_TMR1_ISR 0850  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                    __end_of_CAN_transmit 03D8                   __end_of_TMR1_Initialize 07C4  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                      CAN_transmit@tempEIDH 002A  
                    CAN_transmit@tempEIDL 002B                      CAN_transmit@tempSIDH 002C  
                    CAN_transmit@tempSIDL 002D                           __initialization 08A0  
                            __end_of_main 06D2               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 0032                             __activetblptr 000002  
                          __CFG_RETEN$OFF 000000                         ??_ECAN_Initialize 0015  
                 __end_of_TMR0_StartTimer 090C                                    _CANCON 000F6F  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
                                  _T1GCON 000FAA                           __CFG_BBSIZ$BB2K 000000  
                                  i2l1701 06F2                                    i2l1721 0738  
                                  i2l1713 0720                                    i2l1705 0700  
                                  i2l1707 0708                                    i2l1709 070C  
                                  i2l1717 072A                            __CFG_WDTEN$OFF 000000  
                                  i2l1697 06E6                                    _OSCCON 000FD3  
                                  _RXB0D0 000F66                                    _RXB0D1 000F67  
                                  _RXB0D2 000F68                                    _RXB0D3 000F69  
                                  _RXB0D4 000F6A                                    _RXB1D0 000F36  
                                  _RXB0D5 000F6B                                    _RXB1D1 000F37  
                                  _RXB0D6 000F6C                                    _RXB1D2 000F38  
                                  _RXB0D7 000F6D                                    _RXB1D3 000F39  
                                  _RXB1D4 000F3A                                    _RXB1D5 000F3B  
                                  _RXB1D6 000F3C                                    _RXB1D7 000F3D  
                                  _TXB0D0 000F26                                    _TXB0D1 000F27  
                                  _TXB0D2 000F28                                    _TXB0D3 000F29  
                                  _TXB0D4 000F2A                                    _TXB1D0 000F16  
                                  _TXB0D5 000F2B                                    _TXB1D1 000F17  
                                  _TXB0D6 000F2C                                    _TXB1D2 000F18  
                                  _TXB0D7 000F2D                                    _TXB1D3 000F19  
                                  _TXB1D4 000F1A                                    _TXB2D0 000F06  
                                  _TXB1D5 000F1B                                    _TXB2D1 000F07  
                                  _TXB1D6 000F1C                                    _TXB2D2 000F08  
                                  _TXB1D7 000F1D                                    _TXB2D3 000F09  
                                  _TXB2D4 000F0A                                    _TXB2D5 000F0B  
                                  _TXB2D6 000F0C                                    _TXB2D7 000F0D  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 0912  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 0910  
                 __end_of_TMR1_StartTimer 0908                            __CFG_STVREN$ON 000000  
                               ??___awmod 0005                          ?_TMR0_Initialize 0001  
                                  clear_0 08A6                           ___awmod@divisor 0003  
                         ___awmod@counter 0005                 __size_of_convertCANid2Reg 019E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                          __end_of_transmit 0788  
TMR1_SetInterruptHandler@InterruptHandler 0015  TMR0_SetInterruptHandler@InterruptHandler 0015  
           __size_of_INTERRUPT_Initialize 0004                          ?_TMR1_Initialize 0001  
                       _SYSTEM_Initialize 08BA                                __accesstop 0060  
                 __end_of__initialization 08AC                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0019                                 ?_TMR0_ISR 0001  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                              _canMessage 0034                     __size_of_CAN_transmit 033E  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 08D4  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0042  
        __end_of_TMR0_SetInterruptHandler 08FA                              _CAN_transmit 009A  
                        ?_TMR1_StartTimer 0001                                ??_TMR0_ISR 0007  
                              ??_TMR1_ISR 0001                                   _ECANCON 000F72  
                                 _CANSTAT 000F6E                                   _BRGCON1 000E43  
                                 _BRGCON2 000E44                                   _BRGCON3 000E45  
                        __CFG_CANMX$PORTC 000000                                   _REFOCON 000F9A  
                                 _OSCCON2 000FD2                                   _RXB0DLC 000F65  
                                 i2u18_48 083C                                   _RXB1DLC 000F35  
                                 i2u51_48 0866                                   _OSCTUNE 000F9B  
                                 _TXB0DLC 000F25                                   _TXB1DLC 000F15  
                                 _TXB2DLC 000F05                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awmod 06D2                           _ECAN_Initialize 0576  
                               ?_transmit 002E                                   __pcinit 08A0  
                                 __ramtop 0F00                                   __ptext0 065C  
                                 __ptext1 0742                                   __ptext2 009A  
                                 __ptext3 03D8                                   __ptext4 08BA  
                                 __ptext5 0788                                   __ptext6 0904  
                                 __ptext7 08E6                                   __ptext8 07C4  
                                 __ptext9 0908                                 _T0CONbits 000FD5  
          ??_TMR1_DefaultInterruptHandler 0001                                 _T1CONbits 000FCD  
                   _OSCILLATOR_Initialize 08D4                          ___awmod@dividend 0001  
       __size_of_TMR1_SetInterruptHandler 000A                          _convertCANid2Reg 03D8  
                ??_PIN_MANAGER_Initialize 0015                 ?_TMR1_SetInterruptHandler 0015  
                       __CFG_MSSPMSK$MSK7 000000                __size_of_SYSTEM_Initialize 001A  
                    end_of_initialization 08AC                             __Lmediumconst 0000  
                           ?_time_to_send 0001                                   postinc0 000FEE  
                                 postinc2 000FDE                                ??_transmit 0032  
                _TMR0_SetInterruptHandler 08F0                          __CFG_FOSC$INTIO2 000000  
                              _updateData 087A                    CAN_transmit@tempCanMsg 0027  
                          ??_time_to_send 0001                   __end_of_ECAN_Initialize 065C  
            __end_of_INTERRUPT_Initialize 0910                         __size_of_TMR0_ISR 002A  
                       __size_of_TMR1_ISR 002A                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 08A0                  __size_of_TMR0_Initialize 0038  
         __size_of_PIN_MANAGER_Initialize 002A                  __size_of_TMR1_Initialize 003C  
                             __pbssCOMRAM 0032                               ?_updateData 0001  
                   _TMR0_InterruptHandler 0048                  __size_of_TMR0_StartTimer 0004  
                        ?_ECAN_Initialize 0001                    _PIN_MANAGER_Initialize 07FC  
                __end_of_convertCANid2Reg 0576                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 08F0                                  ?___awmod 0001  
            ??_INTERRUPT_InterruptManager 0007                         __size_of_transmit 0046  
                    __end_of_time_to_send 0904                  __size_of_TMR1_StartTimer 0004  
                             _COMSTATbits 000F71            convertCANid2Reg@tempPassedInID 0015  
                    _INTERRUPT_Initialize 090C                         ??_TMR0_Initialize 0017  
                                _PIE1bits 000F9D                                  _PIE5bits 000F76  
     __size_of_INTERRUPT_InterruptManager 008E                ??_TMR0_SetInterruptHandler 0017  
                                _PIR1bits 000F9E                                  _PIR5bits 000F77  
                     __size_of_updateData 0026                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RXB1EIDH 000F33  
                                _RXB1EIDL 000F34                                  _RCONbits 000FD0  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXB1SIDH 000F31                                  _RXF0EIDH 000EE2  
                                _RXB1SIDL 000F32                                  _RXF0EIDL 000EE3  
                                _RXF1EIDH 000EE6                                  _RXF1EIDL 000EE7  
                                _RXF2EIDH 000EEA                                  _RXF2EIDL 000EEB  
                                _RXF3EIDH 000EEE                                  _RXF3EIDL 000EEF  
                                _RXF4EIDH 000EF2                                  _RXF4EIDL 000EF3  
                                _RXF5EIDH 000EF6                                  _RXF5EIDL 000EF7  
                                _RXF0SIDH 000EE0                                  _RXF0SIDL 000EE1  
                                _TXB0EIDH 000F23                                  _RXF1SIDH 000EE4  
                                _TXB0EIDL 000F24                                  _RXF1SIDL 000EE5  
                                _TXB1EIDH 000F13                                  _RXF2SIDH 000EE8  
                                _TXB1EIDL 000F14                                  _RXF2SIDL 000EE9  
                                _TXB2EIDH 000F03                                  _RXF3SIDH 000EEC  
                                _TXB2EIDL 000F04                                  _RXF3SIDL 000EED  
                                _RXF4SIDH 000EF0                                  _RXF4SIDL 000EF1  
                                _TMR0_ISR 0850                                  _RXF5SIDH 000EF4  
                                _RXF5SIDL 000EF5                                  _TMR1_ISR 0826  
                                _RXM0EIDH 000EFA                                  _RXM0EIDL 000EFB  
                                _TXB0SIDH 000F21                                  _RXM1EIDH 000EFE  
                                _TXB0SIDL 000F22                                  _RXM1EIDL 000EFF  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                                _TXB2SIDH 000F01                                  _TXB2SIDL 000F02  
                                _RXM0SIDH 000EF8                                  _RXM0SIDL 000EF9  
                                _RXM1SIDH 000EFC                                  _RXM1SIDL 000EFD  
                       ??_TMR1_Initialize 0017                          __CFG_SOSCSEL$DIG 000000  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                              transmit@id 002E                 convertCANid2Reg@canIdType 0019  
                 ??_OSCILLATOR_Initialize 0015                         ??_TMR0_StartTimer 0015  
                              _CIOCONbits 000F70                          __size_of___awmod 0070  
                _TMR1_SetInterruptHandler 08E6                     _TMR1_InterruptHandler 0042  
                 convertCANid2Reg@wipSIDL 0026                                  __ptext10 08F0  
                                __ptext11 07FC                                  __ptext20 0912  
                                __ptext12 08D4                                  __ptext21 087A  
                                __ptext13 090C                                _T1GCONbits 000FAA  
                                __ptext22 06D2                                  __ptext14 0576  
                                __ptext23 0000                                  __ptext16 0826  
                                __ptext17 0910                                  __ptext18 08FA  
                                __ptext19 0850                         ??_TMR1_StartTimer 0015  
                           __size_of_main 0076      __end_of_TMR0_DefaultInterruptHandler 0914  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 0912  
                           ?_CAN_transmit 0027                                  int$flags 004A  
                   __size_of_time_to_send 000A                                  _transmit 0742  
      __end_of_INTERRUPT_InterruptManager 0096                _INTERRUPT_InterruptManager 0008  
                     __CFG_INTOSCSEL$HIGH 000000                               _RXB0CONbits 000F60  
                             _RXB1CONbits 000F30                                _INTCONbits 000FF2  
                            ??_updateData 0007                    ??_INTERRUPT_Initialize 0015  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                            _time_to_send 08FA                               _TXB0CONbits 000F20  
                             _TXB1CONbits 000F10                               _TXB2CONbits 000F00  
           ?_TMR0_DefaultInterruptHandler 0001                            ??_CAN_transmit 0029  
                       ?_convertCANid2Reg 0015                        __end_of_updateData 08A0  
                      __CFG_WDTPS$1048576 000000                        ??_convertCANid2Reg 0022  
                         _TMR0_Initialize 07C4            __end_of_PIN_MANAGER_Initialize 0826  
                     __CFG_BORPWR$ZPBORMV 000000                           _TMR1_Initialize 0788  
